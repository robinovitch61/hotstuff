{"version":3,"sources":["config.ts","components/Sidebar/EditableTable/style.ts","components/Sidebar/EditableTable/TableHeader.tsx","components/Sidebar/EditableTable/cells/DropDownTableCell.tsx","components/Sidebar/style.tsx","components/Sidebar/EditableInput.tsx","components/Sidebar/EditableStringInput.tsx","components/Sidebar/EditableTable/cells/TextTableCell.tsx","components/Sidebar/EditableNumberInput.tsx","components/Sidebar/EditableTable/cells/NumericalTableCell.tsx","components/Sidebar/EditableTable/cells/BooleanTableCell.tsx","components/Sidebar/EditableTable/TableCell.tsx","components/Sidebar/EditableTable/hooks/useSortableTable.ts","components/Sidebar/EditableTable/DeleteCell.tsx","utils/nodeConnectionUtils.ts","components/Sidebar/EditableTable/NodeTable/NodeTable.tsx","components/Sidebar/EditableTable/ConnectionTable/ConnectionTable.tsx","components/Tabs/Tabs.tsx","utils/pointUtils.ts","default.ts","components/Sidebar/ModelControls.tsx","components/Sidebar/Sidebar.tsx","components/Plot/LinePlot.tsx","components/Plot/Plot.tsx","components/Canvas/canvasUtils.ts","components/Canvas/hooks/usePanZoomCanvas.ts","components/Canvas/CanvasControls.tsx","components/Canvas/ModalControls.tsx","components/Canvas/Canvas.tsx","components/Canvas/hooks/useOnClickCanvas.ts","hooks/useDraw.ts","hooks/useAddConnection.ts","hooks/useMoveNode.ts","hooks/useMultiSelect.ts","hooks/useOnMouseDown.ts","hooks/useClickAndDragElement.ts","hooks/useResizablePanels.ts","style.tsx","components/Modal/ConfirmationModal.tsx","components/Modal/TheoryModal.tsx","components/Modal/Modal.tsx","hooks/useOnClickOutside.ts","App.tsx","hooks/useSessionStorageState.ts","hooks/useAppStateModifiers.ts","hooks/useNodeConnectionUtils.ts","hooks/useKeyDown.ts","hooks/useDoubleClick.ts","components/Canvas/hooks/useWindowSize.ts","utils/scrollBar.ts","index.tsx"],"names":["config","defaultTempDegC","defaultCapJPerDegK","defaultPowerGenW","defaultTotalTimeSeconds","defaultTimeStepSeconds","defaultNodeName","defaultNodeRadius","defaultResistanceDegKPerW","defaultEditorWidthFraction","defaultCanvasHeightFraction","defaultTableHeightFraction","minPanelFraction","newNodeNamePrefix","zoomSensitivity","minZoom","maxZoom","maxZoomDelta","minRadiusPx","maxRadiusPx","activeNodeOutlineWidthPx","tabHeightPx","plotHeightBufferPx","tableDeleteCellWidthPercent","tableDeleteCellMinWidthPx","plotMargin","left","right","top","bottom","plotDomainMarginPercent","maxPlotPoints","multiSelectKeys","StyledTableWrapper","styled","div","StyledTable","StyledTableBody","StyledAddButton","button","StyledRow","heightOffsetPx","isActive","StyledCell","width","minWidth","StyledDeleteCell","StyledHeaderWrapper","StyledColHeader","StyledColText","StyledSortIcon","TableHeader","props","columns","sortState","setSortState","sortIcon","direction","map","col","isSortedCol","key","onClick","sortDirection","minWidthPx","text","toString","style","cursor","StyledSelect","select","DropDownTableCell","value","setOption","id","onChange","event","newVal","target","selectedOption","options","find","option","undefined","onSelectOption","rowId","StyledInput","input","StyledEditor","height","StyledTables","heightFrac","StyledModelControlsWrapper","EditableInput","initialValue","onBlur","getNewValue","afterValue","validator","withAfterValue","useCallback","val","useState","setValue","handleOnBlur","validated","prevVal","type","onFocus","replace","onKeyDown","EditableStringInput","TextTableCell","initialVal","getFloatVal","newValueText","newValueFloat","parseFloat","isNaN","EditableNumberInput","NumericalTableCell","StyledCheckbox","BooleanTableCell","initialIsActive","setIsActive","tabIndex","onKeyUp","showWhenActive","TableCell","row","onUpdateRow","initiallySetOption","length","useSortableTable","defaultSortState","tieBreakerKey","ultraSuperDuperTieBreakerKey","first","second","DeleteCell","onDeleteRow","ALL_CONNECTION_KINDS","DO_NOT_PAIR_KINDS","getExistingConnections","firstNodeId","secondNodeId","connections","filter","conn","firstNode","secondNode","makeNewConnection","kind","resistance","firstNodeFirst","name","makeConnection","resistanceDegKPerW","getNewConnectionKindsPossible","connectionKind","otherConnections","existingKinds","some","k","includes","getNewConnection","existingConnections","remainingKinds","every","getNewAppNode","appNodes","center","numNodesWithDefaultPrefix","node","startsWith","newNode","makeNode","temperatureDegC","capacitanceJPerDegK","powerGenW","isBoundary","textDirection","getConnectionAfterValue","filterConnectionOptions","colKey","selectedConnection","filterKey","allOtherConnections","filteringFirstNode","otherConnectionsLikeSelected","c","otherConnection","isIllegalConnectionKindCombo","filterFirstAndSecondNodeOptions","possibleKinds","opt","defaultNodeSortState","NodeTable","rows","onAddButton","sortByState","nodeColumns","useMemo","otherNames","trimName","trim","safeName","safeAllNames","n","i","makeNewName","validateNodeName","r","tableRows","sort","tableCell","defaultConnectionSortState","connectionTypes","ConnectionTable","nodes","onSelectNewfirstNode","connection","newfirstNodeNode","onSelectNewsecondNode","newsecondNodeNode","onSelectNewConnectionType","rowToUpdate","nodeOptions","connectionColumns","activeNodeIds","cols","makeStyledCell","StyledTabsWrapper","StyledTabs","StyledTab","StyledTabText","StyledInnerContent","Tabs","activeIdx","setActiveIdx","tabs","tab","idx","className","topLeftRounded","_","component","ORIGIN","Object","freeze","x","y","diffPoints","p1","p2","scalePoint","scale","jerryNode","jerryAppNode","bedNode","bedAppNode","airNode","defaultNodes","defaultConnections","defaultTiming","timeStepS","totalTimeS","defaultCanvasViewState","offset","defaultPanelSizes","editorWidthFraction","canvasHeightFraction","tableHeightFraction","defaultModalState","visible","defaultAppState","output","timing","canvasViewState","savedCanvasState","panelSizes","StyledButton","StyledImport","StyledTopControls","StyledTimeControls","StyledTimeControl","StyledInputWrapper","StyledLabel","label","ModelControls","appState","setAppState","setModalState","onRunModel","setTiming","stagedAppState","setStagedAppState","newTotalTimeS","newTimeStepS","navigator","clipboard","writeText","JSON","stringify","parse","prev","onConfirm","confirmText","Sidebar","onAddNode","onAddConnection","updateNodes","deleteNodes","updateConnections","deleteConnections","nodeTable","connectionTable","StyledToolTip","StyledToolTipTitle","StyledToolTipItem","color","StyledToolTipValue","after","CustomTooltip","active","payload","sortedPayload","a","b","item","LinePlot","plotDimensions","plotData","lines","xAxisKey","xLabel","yLabel","yDomain","unit","LineChart","margin","data","CartesianGrid","strokeDasharray","XAxis","dataKey","position","dy","YAxis","domain","angle","dx","Tooltip","content","Legend","layout","verticalAlign","align","wrapperStyle","paddingLeft","paddingBottom","colors","StyledCharts","StyledPlot","roundToNearestTenth","Math","round","plotShape","lowerMag","floor","log10","divisibleBy","pow","includeAll","timeSeriesS","tempsAtAllTimes","minTemp","maxTemp","heatTransfersAtAllTimes","minHeatTransfer","maxHeatTransfer","forEach","t","abs","temp","time","ht","nodeResults","nodeResult","tempVal","tempDegC","connectionResults","connectionResult","heatTransferVal","heatTransferW","push","Plot","modelHasOutput","modelOutput","res","emptyOutput","tempPlotData","tempDomain","heatTransferPlotData","heatTransferDomain","yTempDomainMargin","yTempDomain","ceil","yHeatTransferDomainMargin","yHeatTransferDomain","heatTransferLines","Line","stroke","activeDot","isAnimationActive","tempLines","tempPlot","heatTransferPlot","DEFAULT_RADIUS","drawNode","context","radius","save","beginPath","arc","PI","fillStyle","fill","closePath","restore","drawCircle","lineWidth","strokeStyle","drawCircleOutline","translate","rotate","moveTo","lineTo","h","newRadius","sin","acos","drawHashPattern","font","textMetrics","measureText","fillText","actualBoundingBoxAscent","actualBoundingBoxDescent","drawNodeName","drawConnection","firstNodeCenter","firstNodeRadius","secondNodeCenter","secondNodeRadius","start","end","startOffset","endOffset","headLength","headWidth","arrowGap","atan2","adjLength","sqrt","drawBidirectionalArrow","drawUnidirectionalArrow","intersectsCircle","point","circleCenter","deltaX","deltaY","calculateMousePositionOnElement","element","viewportMousePos","pageX","pageY","boundingRect","getBoundingClientRect","mouseToNodeCoords","canvasState","canvasMouse","canvas","mouse","determineRadius","capacitance","allCapacitances","min","max","StyledButtons","CanvasControls","setCanvasViewState","setSavedCanvasState","StyledModalControls","StyledModalControlButton","ModalControls","StyledCanvasWrapper","StyledCanvas","cssWidth","cssHeight","Canvas","ref","onClickCanvas","canvasWidth","canvasHeight","devicePixelRatio","draw","onMouseDown","handleDoubleClick","savedCanvasViewState","setSavedCanvasViewState","setKeyboardActive","canvasRef","useRef","useEffect","handleClickOutside","keyBoardActive","current","contains","document","addEventListener","removeEventListener","setContext","mousePosRef","lastMousePosRef","lastCanvasViewState","mouseMove","newMousePos","mouseDiff","newCanvasViewState","mouseUp","startPan","useLayoutEffect","handleWheel","preventDefault","zoomDelta","zoom","newScale","mouseOffset","canvasElem","usePanZoomCanvas","renderCtx","getContext","onDoubleClick","useDraw","appConnections","nodeRadius","nodeColor","temperature","allTemperatures","range","scaleDiverging","test","determineColor","firstNodeAppNode","secondNodeAppNode","clearAndRedraw","clearRect","useAddConnection","addConnection","drawConnectionBeingMade","clickedNode","nodeCoordsOfMouse","drawArrowWithoutHead","drawConnWrapper","mouseUpOnNode","newConnection","getNewAppNodes","clickedMouseEvent","currentMouseEvent","multiSelectKeyPressed","activeNodes","offsetMouseToCenter","newClickedCenter","newClickedNode","newActiveNodes","distanceFromClickedCenter","useMultiSelect","setActiveNodes","boxStart","drawBox","globalAlpha","fillRect","rect","boxEnd","startBox","endBox","topLeft","bottomRight","bottomLeft","topRight","isInsideBox","useOnMouseDown","clearActiveNodes","moveNode","movedRef","mouseDownEvent","newNodes","mouseUpEvent","useMoveNode","multiSelect","defaultBehavior","altKey","onMouseUp","clientX","clientY","useClickAndDragElement","params","lastMousePos","onDragX","onDragY","constrainX","constrainY","onMouseMove","mouseMoveEvent","currentMousePos","diff","constrainPanelSize","newPanelSize","StyledApp","modalOpen","StyledDraggableBorder","StyledHorizontalBorder","StyledVerticalBorder","StyledWorkspace","StyledConfirmationModal","StyledConfirmationText","p","StyledConfirmationButtons","StyledConfirmationButton","ConfirmationModal","modalState","StyledTheoryModal","StyledTitle","h1","StyledText","StyledLink","StyledListItem","li","TheoryModal","href","display","tex","String","raw","StyledModal","StyledExitButton","Modal","onClickOutside","modalRef","listener","modalContent","getModalContent","prevState","App","defaultValue","React","localState","window","sessionStorage","getItem","setItem","useSessionStorageState","newConnections","newCanvasState","newSavedCanvasState","newTiming","newModelOutput","useAppStateModifiers","setAppNodes","setAppConnections","setModelOutput","addNode","nodesToUpdate","prevConn","nodeToUpdate","nodeIds","connsToUpdate","sortedConnsToUpdate","connIdsToUpdate","oldConns","connIds","useNodeConnectionUtils","keyboardActive","metaKey","keyCode","useKeyDown","doubleClickedNode","newAppNode","useDoubleClick","size","setSize","ratio","setRatio","updateSize","innerWidth","innerHeight","updateRatio","useWindowSize","windowWidth","windowHeight","newX","minPx","maxPx","newY","deltaYPx","prevAppState","deltaXPx","useResizablePanels","canvasPlotBorderRef","onMouseDownOnCanvasPlotBorder","leftRightBorderRef","onMouseDownOnLeftRightBorder","tableControlsBorderRef","onMouseDownOnTableControlsBorder","workspaceWidth","workspaceHeight","plotHeight","plotWidth","editorWidth","plot","addNodeInCenterOfCanvas","topLeftPoint","getCanvasCenter","createNewLogicalConnection","getNewPossibleConnection","conns","run","errors","error","console","message","scrollableElem","createElement","innerElem","overflow","borderWidth","appendChild","body","offsetWidth","clientWidth","removeChild","areScrollbarsVisible","classList","add","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.79659409.chunk.js","sourcesContent":["type MouseEventKey = \"shiftKey\" | \"altKey\" | \"metaKey\" | \"ctrlKey\";\n\nconst config = {\n  defaultTempDegC: 23,\n  defaultCapJPerDegK: 10,\n  defaultPowerGenW: 0,\n  defaultTotalTimeSeconds: 600,\n  defaultTimeStepSeconds: 0.1,\n  defaultNodeName: \"Unnamed\",\n  defaultNodeRadius: 20,\n  defaultResistanceDegKPerW: 10,\n  defaultEditorWidthFraction: 1 - 1 / 1.61803398875,\n  defaultCanvasHeightFraction: 1 / 1.61803398875,\n  defaultTableHeightFraction: 0.5,\n  minPanelFraction: 0.1,\n  newNodeNamePrefix: \"New Node\",\n  zoomSensitivity: 1500, // bigger = less zoom per click\n  minZoom: 0.5,\n  maxZoom: 2,\n  maxZoomDelta: 2,\n  minRadiusPx: 20,\n  maxRadiusPx: 40,\n  activeNodeOutlineWidthPx: 5,\n  tabHeightPx: 25,\n  plotHeightBufferPx: 10,\n  tableDeleteCellWidthPercent: 0.1,\n  tableDeleteCellMinWidthPx: 40,\n  plotMargin: {\n    left: 10,\n    right: 20,\n    top: 20,\n    bottom: 20,\n  },\n  plotDomainMarginPercent: 0.1,\n  maxPlotPoints: 400,\n  multiSelectKeys: [\"metaKey\", \"ctrlKey\"] as MouseEventKey[],\n};\n\nexport default config;\n","import styled from \"styled-components/macro\";\n\nexport const StyledTableWrapper = styled.div`\n  width: 100%;\n`;\n\nexport const StyledTable = styled.div`\n  width: 100%;\n  border-collapse: collapse;\n`;\n\nexport const StyledTableBody = styled.div`\n  width: 100%;\n`;\n\nexport const StyledAddButton = styled.button``;\n\nexport const StyledRow = styled.div<{\n  heightOffsetPx?: number;\n  isActive: boolean;\n}>`\n  display: inline-flex;\n  align-items: center;\n  min-width: 100%;\n  position: sticky;\n  top: ${({ heightOffsetPx }) =>\n    heightOffsetPx ? `${heightOffsetPx}px` : \"0px\"};\n  background: ${({ isActive }) =>\n    isActive ? \"rgba(112, 165, 255, 0.2)\" : \"none\"};\n`;\n\nexport const StyledCell = styled.div<{ width: number; minWidth?: number }>`\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  border: 1px solid #ddd;\n  height: 2em;\n  width: ${({ width }) => `${width * 100}%`};\n  min-width: ${({ minWidth }) => (!!minWidth ? `${minWidth}px` : \"none\")};\n`;\n\nexport const StyledDeleteCell = styled(StyledCell)`\n  cursor: pointer;\n  user-select: none;\n  min-width: 40px;\n\n  &:hover {\n    background: black;\n  }\n`;\n\nexport const StyledHeaderWrapper = styled.div<{ heightOffsetPx?: number }>`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  position: sticky;\n  top: ${({ heightOffsetPx }) =>\n    heightOffsetPx ? `${heightOffsetPx}px` : \"0px\"};\n  z-index: 1;\n`;\n\nexport const StyledColHeader = styled.div<{ width: number; minWidth?: number }>`\n  display: inline-flex;\n  width: ${({ width }) => `${width * 100}%`};\n  min-width: ${({ minWidth }) => (!!minWidth ? `${minWidth}px` : \"none\")};\n  justify-content: center;\n  align-items: center;\n  font-weight: bold;\n  border: 1px solid lightgrey;\n  cursor: pointer;\n  user-select: none;\n  position: relative;\n  background: white;\n  border-bottom: 1px solid black;\n`;\n\nexport const StyledColText = styled.div`\n  font-size: 0.8em;\n  padding: 1em;\n`;\n\nexport const StyledSortIcon = styled.div`\n  position: absolute;\n  bottom: 0;\n  right: 50%;\n  transform: translate(50%);\n`;\n","import config from \"../../../config\";\nimport {\n  StyledColHeader,\n  StyledColText,\n  StyledHeaderWrapper,\n  StyledSortIcon,\n} from \"./style\";\nimport * as React from \"react\";\nimport { SortDirection, TableColumn, TableSortState } from \"./types\";\n\ntype TableHeaderProps<T> = {\n  columns: TableColumn<T>[];\n  sortState: TableSortState<T>;\n  setSortState: React.Dispatch<React.SetStateAction<TableSortState<T>>>;\n};\n\nfunction oppositeSortDirection(sortDirection: SortDirection): SortDirection {\n  return sortDirection === \"ASC\" ? \"DESC\" : \"ASC\";\n}\n\nexport default function TableHeader<T>(\n  props: TableHeaderProps<T>\n): React.ReactElement {\n  const { columns, sortState, setSortState } = props;\n\n  const sortIcon = !sortState\n    ? \"\"\n    : sortState.direction === \"ASC\"\n    ? \"\\u25B2\"\n    : \"\\u25BC\";\n\n  return (\n    <StyledHeaderWrapper heightOffsetPx={config.tabHeightPx}>\n      {columns.map((col) => {\n        const isSortedCol = sortState && sortState.key === col.key;\n        const onClick = () => {\n          setSortState({\n            key: col.key,\n            direction:\n              !isSortedCol || !sortState\n                ? \"ASC\"\n                : oppositeSortDirection(sortState.direction),\n          });\n        };\n\n        return (\n          <StyledColHeader\n            key={col.key.toString()}\n            onClick={onClick}\n            width={col.width}\n            minWidth={col.minWidthPx}\n          >\n            <StyledColText>{col.text}</StyledColText>\n            <StyledSortIcon>{isSortedCol ? sortIcon : \"\"}</StyledSortIcon>\n          </StyledColHeader>\n        );\n      })}\n      <StyledColHeader\n        width={config.tableDeleteCellWidthPercent}\n        minWidth={config.tableDeleteCellMinWidthPx}\n        style={{ cursor: \"unset\" }}\n      />\n    </StyledHeaderWrapper>\n  );\n}\n","import * as React from \"react\";\nimport styled from \"styled-components/macro\";\nimport { CellOption } from \"../types\";\n\nconst StyledSelect = styled.select`\n  display: inline-flex;\n  width: 100%;\n  height: 100%;\n  background: unset;\n`;\n\nexport type DropDownTableCellProps = {\n  rowId: string;\n  options: CellOption[];\n  setOption?: CellOption;\n  onSelectOption: (id: string, option: CellOption) => void;\n  optionsFilter?: (option: CellOption) => CellOption[];\n};\n\nexport default function DropDownTableCell(\n  props: DropDownTableCellProps\n): React.ReactElement {\n  function handleChange(event: React.ChangeEvent<HTMLSelectElement>) {\n    const newVal = event.target.value;\n\n    const selectedOption = props.options.find((option) => option.id === newVal);\n\n    if (selectedOption !== undefined) {\n      props.onSelectOption(props.rowId, selectedOption);\n    }\n  }\n\n  return (\n    <StyledSelect value={props.setOption?.id} onChange={handleChange}>\n      {props.options.map((option) => (\n        <option key={option.id} value={option.id}>\n          {option.text}\n        </option>\n      ))}\n    </StyledSelect>\n  );\n}\n","import styled from \"styled-components/macro\";\n\nexport const StyledInput = styled.input`\n  display: inline-block;\n  border: none;\n  width: 100%;\n  height: 100%;\n  text-align: center;\n  padding: 0;\n  background: unset;\n\n  &::-webkit-inner-spin-button,\n  &::-webkit-outer-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n`;\n\nexport const StyledEditor = styled.div<{ width: number; height: number }>`\n  height: ${(props) => props.height}px;\n  width: ${(props) => props.width}px;\n  border-left: 3px solid black;\n`;\n\nexport const StyledTables = styled.div<{ heightFrac: number }>`\n  display: inline-flex;\n  width: 100%;\n  height: ${(props) => props.heightFrac * 100}%;\n`;\n\nexport const StyledModelControlsWrapper = styled.div<{ heightFrac: number }>`\n  display: inline-flex;\n  width: 100%;\n  height: ${(props) => props.heightFrac * 100}%;\n`;\n","import React, { useCallback, useState } from \"react\";\nimport { StyledInput } from \"./style\";\n\ninterface CanBeMadeString {\n  toString: () => string;\n}\n\ntype EditableInputProps<T> = {\n  initialValue: T;\n  onBlur: (value: T) => void;\n  getNewValue: (event: React.ChangeEvent<HTMLInputElement>) => T | undefined;\n  afterValue?: string;\n  validator: (value: string) => T;\n};\n\nexport default function EditableInput<T extends CanBeMadeString>(\n  props: EditableInputProps<T>\n): React.ReactElement {\n  const { initialValue, onBlur, getNewValue, afterValue, validator } = props;\n\n  const withAfterValue = useCallback(\n    (val: string) => val + (afterValue || \"\"),\n    [afterValue]\n  );\n\n  const [value, setValue] = useState<string>(\n    withAfterValue(initialValue.toString())\n  );\n\n  function handleOnChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const newVal = event.target.value;\n    if (newVal !== undefined) {\n      setValue(newVal);\n    }\n  }\n\n  const handleOnBlur = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      const newVal = getNewValue(event);\n      if (event.target.value === initialValue.toString()) {\n        setValue((prevVal) => withAfterValue(prevVal));\n        return;\n      } else if (newVal !== undefined) {\n        const validated = validator(newVal.toString());\n        setValue(withAfterValue(validated.toString()));\n        onBlur(validated);\n      } else {\n        const validated = validator(initialValue.toString());\n        setValue(withAfterValue(validated.toString()));\n        onBlur(validated);\n      }\n    },\n    [getNewValue, initialValue, onBlur, validator, withAfterValue]\n  );\n\n  return (\n    <StyledInput\n      type=\"text\"\n      value={value}\n      onChange={handleOnChange}\n      onFocus={() =>\n        setValue((prevVal) => prevVal.replace(afterValue || \"\", \"\"))\n      }\n      onBlur={handleOnBlur}\n      // TODO LEO\n      onKeyDown={(event: React.KeyboardEvent) => {\n        if (event.key === \"Escape\") {\n        } else if (event.key === \"Enter\") {\n        }\n      }}\n    />\n  );\n}\n","import React from \"react\";\nimport EditableInput from \"./EditableInput\";\n\ntype EditableStringInputProps = {\n  initialValue: string;\n  onBlur: (value: string) => void;\n  validator?: (val: string) => string;\n};\n\nexport default function EditableStringInput(\n  props: EditableStringInputProps\n): React.ReactElement {\n  const validator = (val: string) =>\n    props.validator ? props.validator(val) : val;\n\n  return (\n    <EditableInput<string>\n      key={props.initialValue}\n      initialValue={props.initialValue}\n      onBlur={props.onBlur}\n      getNewValue={(event: React.ChangeEvent<HTMLInputElement>) =>\n        event.target.value\n      }\n      validator={validator}\n    />\n  );\n}\n","import React from \"react\";\nimport EditableStringInput from \"../../EditableStringInput\";\n\nexport type TextTableCellProps = {\n  initialVal: string;\n  onBlur: (newValue: string) => void;\n  validator?: (val: string) => string;\n};\n\nexport default function TextTableCell(\n  props: TextTableCellProps\n): React.ReactElement {\n  return (\n    <EditableStringInput\n      initialValue={props.initialVal}\n      onBlur={props.onBlur}\n      validator={props.validator}\n    />\n  );\n}\n","import React from \"react\";\nimport EditableInput from \"./EditableInput\";\n\nfunction getFloatVal(\n  event: React.ChangeEvent<HTMLInputElement>\n): number | undefined {\n  const newValueText = event.target.value;\n  // things like 123.3abc will still parse as 123.3\n  const newValueFloat = parseFloat(event.target.value);\n  if (newValueText === undefined || isNaN(newValueFloat)) {\n    return undefined;\n  }\n  return newValueFloat;\n}\n\ntype EditableNumberInputProps = {\n  initialValue: number;\n  onBlur: (value: number) => void;\n  afterValue?: string;\n  validator?: (val: string) => string;\n};\n\nexport default function EditableNumberInput(\n  props: EditableNumberInputProps\n): React.ReactElement {\n  const validator = (val: string) =>\n    props.validator\n      ? parseFloat(props.validator(val.toString()))\n      : parseFloat(val);\n\n  return (\n    <EditableInput<number>\n      key={props.initialValue + (props.afterValue || \"\")}\n      initialValue={props.initialValue}\n      onBlur={props.onBlur}\n      getNewValue={getFloatVal}\n      afterValue={props.afterValue}\n      validator={validator}\n    />\n  );\n}\n","import React from \"react\";\nimport EditableNumberInput from \"../../EditableNumberInput\";\n\nexport type NumericalTableCellProps = {\n  initialVal: number;\n  onBlur: (newValue: number) => void;\n  afterValue?: string;\n};\n\nexport default function NumericalTableCell(\n  props: NumericalTableCellProps\n): React.ReactElement {\n  return (\n    <EditableNumberInput\n      initialValue={props.initialVal}\n      onBlur={props.onBlur}\n      afterValue={props.afterValue}\n    />\n  );\n}\n","import React, { useState } from \"react\";\nimport styled from \"styled-components/macro\";\n\nconst StyledCheckbox = styled.div`\n  display: inline-flex;\n  width: 100%;\n  height: 100%;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  user-select: none;\n`;\n\nexport type BooleanTableCellProps = {\n  initialIsActive?: boolean;\n  onClick: (isActive: boolean) => void;\n  showWhenActive: string;\n};\n\nexport default function BooleanTableCell(\n  props: BooleanTableCellProps\n): React.ReactElement {\n  const [isActive, setIsActive] = useState<boolean>(\n    props.initialIsActive !== undefined ? props.initialIsActive : false\n  );\n\n  return (\n    <StyledCheckbox\n      tabIndex={0}\n      onKeyUp={(event: React.KeyboardEvent) => {\n        if (event.key === \"Enter\") {\n          setIsActive(!isActive);\n          props.onClick(!isActive);\n        }\n      }}\n      onClick={() => {\n        setIsActive(!isActive);\n        props.onClick(!isActive);\n      }}\n    >\n      &nbsp;{isActive ? props.showWhenActive : \"\"}\n    </StyledCheckbox>\n  );\n}\n","import * as React from \"react\";\nimport DropDownTableCell from \"./cells/DropDownTableCell\";\nimport TextTableCell from \"./cells/TextTableCell\";\nimport NumericalTableCell from \"./cells/NumericalTableCell\";\nimport BooleanTableCell from \"./cells/BooleanTableCell\";\nimport { CellOption, TableColumn } from \"./types\";\n\ntype TableCellType = {\n  id: string;\n};\n\ntype TableCellProps<T extends TableCellType> = {\n  row: T;\n  col: TableColumn<T>;\n  onUpdateRow: (row: T) => void;\n  options?: CellOption[];\n  initiallySetOption?: CellOption;\n  afterValue?: string;\n};\n\nexport default function TableCell<T extends TableCellType>(\n  props: TableCellProps<T>\n): React.ReactElement {\n  const { row, col, onUpdateRow, options, initiallySetOption, afterValue } =\n    props;\n  const initialVal = row[col.key];\n\n  if (!!options && options.length > 0 && col.onSelectOption) {\n    return (\n      <DropDownTableCell\n        key={row.id}\n        rowId={row.id}\n        options={options}\n        setOption={initiallySetOption}\n        onSelectOption={col.onSelectOption}\n      />\n    );\n  } else if (typeof initialVal === \"string\") {\n    return (\n      <TextTableCell\n        initialVal={initialVal}\n        onBlur={(newVal) => onUpdateRow({ ...row, [col.key]: newVal })}\n        validator={(val) => (col.validator ? col.validator(row.id, val) : val)}\n      />\n    );\n  } else if (\n    typeof initialVal === \"number\" &&\n    typeof row[col.key] === \"number\"\n  ) {\n    return (\n      <NumericalTableCell\n        key={initialVal}\n        initialVal={initialVal}\n        onBlur={(newVal) => onUpdateRow({ ...row, [col.key]: newVal })}\n        afterValue={afterValue}\n      />\n    );\n  } else if (typeof initialVal === \"boolean\") {\n    return (\n      <BooleanTableCell\n        key={initialVal.toString()}\n        initialIsActive={initialVal}\n        onClick={(newVal) => onUpdateRow({ ...row, [col.key]: newVal })}\n        showWhenActive={\"✅\"}\n      />\n    );\n  } else {\n    return <></>;\n  }\n}\n","import * as React from \"react\";\nimport { useState } from \"react\";\nimport { TableSortState } from \"../types\";\n\nexport default function useSortableTable<T>(\n  defaultSortState: TableSortState<T>,\n  tieBreakerKey: keyof T,\n  ultraSuperDuperTieBreakerKey: keyof T\n): [\n  TableSortState<T>,\n  React.Dispatch<React.SetStateAction<TableSortState<T>>>,\n  (first: T, second: T) => number\n] {\n  const [sortState, setSortState] =\n    useState<TableSortState<T>>(defaultSortState);\n\n  function sortByState(first: T, second: T): number {\n    if (sortState.direction === \"ASC\") {\n      if (first[sortState.key] > second[sortState.key]) {\n        return 1;\n      } else if (first[sortState.key] === second[sortState.key]) {\n        if (first[tieBreakerKey] > second[tieBreakerKey]) {\n          return 1;\n        } else if (first[tieBreakerKey] === second[tieBreakerKey]) {\n          return first[ultraSuperDuperTieBreakerKey] >\n            second[ultraSuperDuperTieBreakerKey]\n            ? 1\n            : -1;\n        } else {\n          return -1;\n        }\n      } else {\n        return -1;\n      }\n    } else {\n      if (first[sortState.key] > second[sortState.key]) {\n        return -1;\n      } else if (first[sortState.key] === second[sortState.key]) {\n        return first[tieBreakerKey] > second[tieBreakerKey] ? 1 : -1;\n      } else {\n        return 1;\n      }\n    }\n  }\n\n  return [sortState, setSortState, sortByState];\n}\n","import React from \"react\";\nimport config from \"../../../config\";\nimport { StyledDeleteCell } from \"./style\";\n\ntype DeleteCellProps<T> = {\n  row: T;\n  onDeleteRow: (row: T) => void;\n};\n\nexport default function DeleteCell<T>(\n  props: DeleteCellProps<T>\n): React.ReactElement {\n  return (\n    <StyledDeleteCell\n      tabIndex={0}\n      onKeyUp={(event: React.KeyboardEvent) => {\n        if (event.key === \"Enter\") {\n          props.onDeleteRow(props.row);\n        }\n      }}\n      width={config.tableDeleteCellWidthPercent}\n      minWidth={config.tableDeleteCellMinWidthPx}\n      onClick={() => props.onDeleteRow(props.row)}\n    >\n      ❌\n    </StyledDeleteCell>\n  );\n}\n","import {\n  HSConnection,\n  HSConnectionKind,\n  HSNode,\n  makeConnection,\n  makeNode,\n} from \"hotstuff-network\";\nimport config from \"../config\";\nimport { AppConnection, AppNode } from \"../App\";\nimport { Point } from \"./pointUtils\";\nimport {\n  AppConnectionTable,\n  ConnectionTableColumn,\n} from \"../components/Sidebar/EditableTable/ConnectionTable/ConnectionTable\";\nimport { CellOption } from \"../components/Sidebar/EditableTable/types\";\n\nconst { newNodeNamePrefix } = config;\n\nconst ALL_CONNECTION_KINDS: HSConnectionKind[] = [\"cond\", \"conv\", \"rad\"];\nconst DO_NOT_PAIR_KINDS: HSConnectionKind[] = [\"cond\", \"conv\"]; // cannot have both of these at once\n\nexport function getExistingConnections(\n  firstNodeId: string,\n  secondNodeId: string,\n  connections: HSConnection[]\n): HSConnection[] {\n  return connections.filter(\n    (conn) =>\n      (conn.firstNode.id === firstNodeId &&\n        conn.secondNode.id === secondNodeId) ||\n      (conn.firstNode.id === secondNodeId && conn.secondNode.id === firstNodeId)\n  );\n}\n\nexport const makeNewConnection = (\n  firstNode: HSNode,\n  secondNode: HSNode,\n  kind: HSConnectionKind,\n  resistance?: number\n): AppConnection => {\n  const firstNodeFirst = firstNode.name <= secondNode.name;\n  return {\n    ...makeConnection({\n      firstNode: firstNodeFirst ? firstNode : secondNode,\n      secondNode: firstNodeFirst ? secondNode : firstNode,\n      resistanceDegKPerW: resistance || config.defaultResistanceDegKPerW,\n      kind,\n    }),\n    firstNodeId: firstNodeFirst ? firstNode.id : secondNode.id,\n    secondNodeId: firstNodeFirst ? secondNode.id : firstNode.id,\n  };\n};\n\nexport function getNewConnectionKindsPossible(\n  connectionKind: HSConnectionKind,\n  firstNodeId: string,\n  secondNodeId: string,\n  otherConnections: HSConnection[]\n): HSConnectionKind[] {\n  // if there's another connection between the nodes (either direction) with that same kind:\n  // - no option for the same kind of connection\n  // - no option for both conduction and convection at once as this doesn't make sense physically (solid vs. fluid)\n  const existingConnections = getExistingConnections(\n    firstNodeId,\n    secondNodeId,\n    otherConnections\n  );\n  const existingKinds = existingConnections.map((conn) => conn.kind);\n  if (\n    connectionKind === \"rad\" &&\n    DO_NOT_PAIR_KINDS.some((k) => existingKinds.includes(k))\n  ) {\n    return [];\n  } else\n    return ALL_CONNECTION_KINDS.filter((kind) => !existingKinds.includes(kind));\n}\n\nexport function getNewConnection(\n  firstNode: AppNode,\n  secondNode: AppNode,\n  connections: AppConnection[]\n): AppConnection | undefined {\n  const existingConnections = getExistingConnections(\n    firstNode.id,\n    secondNode.id,\n    connections\n  );\n  // if no current connections, make a conductive connection\n  if (existingConnections.length === 0) {\n    return makeNewConnection(firstNode, secondNode, \"cond\");\n  }\n\n  const existingKinds = existingConnections.map((conn) => conn.kind);\n  const remainingKinds = ALL_CONNECTION_KINDS.filter(\n    (kind) => !existingKinds.includes(kind)\n  );\n\n  if (DO_NOT_PAIR_KINDS.every((k) => !existingKinds.includes(k))) {\n    return makeNewConnection(firstNode, secondNode, \"cond\");\n  } else if (\n    DO_NOT_PAIR_KINDS.some((k) => remainingKinds.includes(k)) &&\n    !existingKinds.includes(\"rad\")\n  ) {\n    return makeNewConnection(firstNode, secondNode, \"rad\");\n  }\n}\n\nexport function getNewPossibleConnection(\n  appNodes: AppNode[],\n  appConnections: AppConnection[]\n): AppConnection | undefined {\n  for (const firstNode of appNodes) {\n    for (const secondNode of appNodes) {\n      if (firstNode.id !== secondNode.id) {\n        const newConnection = getNewConnection(\n          firstNode,\n          secondNode,\n          appConnections\n        );\n        if (!!newConnection) {\n          return newConnection;\n        }\n      }\n    }\n  }\n  return undefined;\n}\n\nexport function getNewAppNode(appNodes: AppNode[], center: Point): AppNode {\n  const numNodesWithDefaultPrefix = appNodes.filter((node) =>\n    node.name.startsWith(newNodeNamePrefix)\n  ).length;\n\n  const newNode = makeNode({\n    name:\n      numNodesWithDefaultPrefix === 0\n        ? `${newNodeNamePrefix}`\n        : `${newNodeNamePrefix} (${numNodesWithDefaultPrefix + 1})`,\n    temperatureDegC: config.defaultTempDegC,\n    capacitanceJPerDegK: config.defaultCapJPerDegK,\n    powerGenW: config.defaultPowerGenW,\n    isBoundary: false,\n  });\n\n  return {\n    ...newNode,\n    center: center,\n    isActive: false,\n    textDirection: \"D\",\n  };\n}\n\nexport function validateNodeName(name: string, otherNames: string[]): string {\n  const trimName = name.trim();\n  const safeName = trimName === \"\" ? config.defaultNodeName.trim() : trimName;\n  const safeAllNames = otherNames.map((n) => n.trim());\n  if (safeAllNames.includes(safeName)) {\n    let i = 2;\n    const makeNewName = (i: number) => `${safeName} [${i}]`;\n    while (safeAllNames.includes(makeNewName(i))) {\n      i += 1;\n    }\n    return makeNewName(i);\n  } else {\n    return safeName;\n  }\n}\n\nexport function getConnectionAfterValue(\n  col: ConnectionTableColumn,\n  row: AppConnectionTable\n): string | undefined {\n  return col.key !== \"resistanceDegKPerW\"\n    ? undefined\n    : row.kind === \"rad\"\n    ? \" [K\\u2074/W]\"\n    : \" [K/W]\";\n}\n\nfunction filterFirstAndSecondNodeOptions(\n  filterKey: \"firstNodeId\" | \"secondNodeId\",\n  options: CellOption[],\n  selectedConnection: AppConnection,\n  allOtherConnections: AppConnection[]\n) {\n  const filteringFirstNode = filterKey === \"firstNodeId\";\n\n  // all the other connections connecting the same nodes as the selected connection\n  const otherConnectionsLikeSelected = allOtherConnections.filter(\n    (c) =>\n      (c.firstNode.id === selectedConnection.firstNode.id &&\n        c.secondNode.id === selectedConnection.secondNode.id) ||\n      (c.firstNode.id === selectedConnection.secondNode.id &&\n        c.secondNode.id === selectedConnection.firstNode.id)\n  );\n\n  // the selected connection should not consider its currently selected value or the ability to connect to itself\n  const noSelfConnectionOptions = options.filter(\n    (option) =>\n      option.id !==\n        (filteringFirstNode\n          ? selectedConnection.firstNode.id\n          : selectedConnection.secondNode.id) &&\n      option.id !==\n        (filteringFirstNode\n          ? selectedConnection.secondNode.id\n          : selectedConnection.firstNode.id)\n  );\n\n  // for each of the remaining options, exclude the option if an existing connection would violate the connection kind constraints\n  const noConnectionKindViolationOptions = noSelfConnectionOptions.filter(\n    (option) => {\n      return !otherConnectionsLikeSelected.some((otherConnection) => {\n        if (filteringFirstNode) {\n          const otherConnectionKindsPossible = getNewConnectionKindsPossible(\n            otherConnection.kind,\n            option.id,\n            selectedConnection.secondNode.id,\n            allOtherConnections\n          );\n          return !otherConnectionKindsPossible.includes(\n            selectedConnection.kind\n          );\n        } else {\n          const otherConnectionKindsPossible = getNewConnectionKindsPossible(\n            otherConnection.kind,\n            selectedConnection.firstNode.id,\n            option.id,\n            allOtherConnections\n          );\n          return !otherConnectionKindsPossible.includes(\n            selectedConnection.kind\n          );\n        }\n      });\n    }\n  );\n\n  // finally, exclude the options that would create duplicate or illegal connections\n  return noConnectionKindViolationOptions.filter((option) => {\n    return !allOtherConnections.some((otherConnection) => {\n      const isIllegalConnectionKindCombo =\n        (DO_NOT_PAIR_KINDS.includes(selectedConnection.kind) &&\n          DO_NOT_PAIR_KINDS.includes(otherConnection.kind)) ||\n        selectedConnection.kind === otherConnection.kind;\n\n      if (filteringFirstNode) {\n        return (\n          (isIllegalConnectionKindCombo &&\n            option.id === otherConnection.firstNode.id &&\n            selectedConnection.secondNode.id ===\n              otherConnection.secondNode.id) ||\n          (isIllegalConnectionKindCombo &&\n            option.id === otherConnection.secondNode.id &&\n            selectedConnection.secondNode.id === otherConnection.firstNode.id)\n        );\n      } else {\n        return (\n          (isIllegalConnectionKindCombo &&\n            option.id === otherConnection.secondNode.id &&\n            selectedConnection.firstNode.id === otherConnection.firstNode.id) ||\n          (isIllegalConnectionKindCombo &&\n            option.id === otherConnection.firstNode.id &&\n            selectedConnection.firstNode.id === otherConnection.secondNode.id)\n        );\n      }\n    });\n  });\n}\n\nexport function filterConnectionOptions(\n  colKey: string,\n  options: CellOption[],\n  selectedConnection: AppConnection,\n  connections: AppConnection[]\n): CellOption[] {\n  const otherConnections = connections.filter(\n    (conn) => conn.id !== selectedConnection.id\n  );\n\n  if ([\"firstNodeId\", \"secondNodeId\"].includes(colKey)) {\n    return filterFirstAndSecondNodeOptions(\n      colKey as \"firstNodeId\" | \"secondNodeId\",\n      options,\n      selectedConnection,\n      otherConnections\n    );\n  } else if (colKey === \"kind\") {\n    if (!!selectedConnection) {\n      const possibleKinds = getNewConnectionKindsPossible(\n        selectedConnection.kind,\n        selectedConnection.firstNode.id,\n        selectedConnection.secondNode.id,\n        connections\n      );\n      return options.filter((opt) =>\n        possibleKinds.includes(opt.id as HSConnectionKind)\n      );\n    } else {\n      return options;\n    }\n  } else {\n    return options;\n  }\n}\n","import React, { useMemo } from \"react\";\nimport config from \"../../../../config\";\nimport { AppNode } from \"../../../../App\";\nimport {\n  StyledAddButton,\n  StyledCell,\n  StyledRow,\n  StyledTable,\n  StyledTableBody,\n  StyledTableWrapper,\n} from \"../style\";\nimport { TableColumn, TableSortState } from \"../types\";\nimport TableHeader from \"../TableHeader\";\nimport TableCell from \"../TableCell\";\nimport useSortableTable from \"../hooks/useSortableTable\";\nimport DeleteCell from \"../DeleteCell\";\nimport { validateNodeName } from \"../../../../utils/nodeConnectionUtils\";\n\ntype NodeTableColumn = TableColumn<AppNode>;\n\nconst defaultNodeSortState: TableSortState<AppNode> = {\n  key: \"name\",\n  direction: \"ASC\",\n};\n\ntype NodeTableProps = {\n  rows: AppNode[];\n  onUpdateRow: (row: AppNode) => void;\n  onDeleteRow: (row: AppNode) => void;\n  onAddButton: () => void;\n};\n\nexport default function NodeTable(props: NodeTableProps): React.ReactElement {\n  const { rows, onUpdateRow, onDeleteRow, onAddButton } = props;\n\n  const [sortState, setSortState, sortByState] = useSortableTable<AppNode>(\n    defaultNodeSortState,\n    \"temperatureDegC\",\n    \"capacitanceJPerDegK\"\n  );\n\n  const nodeColumns: NodeTableColumn[] = useMemo(\n    () => [\n      {\n        key: \"name\",\n        text: \"Name\",\n        width: 0.3,\n        minWidthPx: 100,\n        validator: (rowId: string, name: string) =>\n          validateNodeName(\n            name,\n            rows.filter((r) => r.id !== rowId).map((r) => r.name)\n          ),\n      },\n      {\n        key: \"temperatureDegC\",\n        text: \"Temp [C]\",\n        width: 0.15,\n        minWidthPx: 100,\n      },\n      {\n        key: \"capacitanceJPerDegK\",\n        text: \"Capacitance [J/K]\",\n        width: 0.15,\n        minWidthPx: 100,\n      },\n      {\n        key: \"powerGenW\",\n        text: \"Power Gen [W]\",\n        width: 0.15,\n        minWidthPx: 80,\n      },\n      {\n        key: \"isBoundary\",\n        text: \"Fixed Temp?\",\n        width: 0.15,\n        minWidthPx: 80,\n      },\n    ],\n    [rows]\n  );\n\n  const sortedRows = rows.sort(sortByState);\n\n  const tableRows = sortedRows.map((row) => {\n    return (\n      <StyledRow\n        key={row.id}\n        heightOffsetPx={config.tabHeightPx}\n        isActive={row.isActive}\n      >\n        {nodeColumns.map((col) => {\n          const tableCell = (\n            <TableCell<AppNode> row={row} col={col} onUpdateRow={onUpdateRow} />\n          );\n          return (\n            <StyledCell\n              key={col.key}\n              width={col.width}\n              minWidth={col.minWidthPx}\n            >\n              {tableCell}\n            </StyledCell>\n          );\n        })}\n        <DeleteCell row={row} onDeleteRow={() => onDeleteRow(row)} />\n      </StyledRow>\n    );\n  });\n\n  return (\n    <StyledTableWrapper>\n      <StyledTable>\n        <TableHeader<AppNode>\n          columns={nodeColumns}\n          sortState={sortState}\n          setSortState={setSortState}\n        />\n        <StyledTableBody>{tableRows}</StyledTableBody>\n        <StyledAddButton onClick={onAddButton}>+</StyledAddButton>\n      </StyledTable>\n    </StyledTableWrapper>\n  );\n}\n","import React, { useCallback, useMemo } from \"react\";\nimport config from \"../../../../config\";\nimport { AppConnection, AppNode } from \"../../../../App\";\nimport {\n  StyledAddButton,\n  StyledCell,\n  StyledRow,\n  StyledTable,\n  StyledTableBody,\n  StyledTableWrapper,\n} from \"../style\";\nimport { CellOption, TableColumn, TableSortState } from \"../types\";\nimport TableHeader from \"../TableHeader\";\nimport TableCell from \"../TableCell\";\nimport useSortableTable from \"../hooks/useSortableTable\";\nimport DeleteCell from \"../DeleteCell\";\nimport { HSConnectionKind } from \"hotstuff-network\";\nimport {\n  filterConnectionOptions,\n  getConnectionAfterValue,\n} from \"../../../../utils/nodeConnectionUtils\";\n\nexport type AppConnectionTable = AppConnection & { isActive: boolean };\nexport type ConnectionTableColumn = TableColumn<AppConnectionTable>;\n\nconst defaultConnectionSortState: TableSortState<AppConnectionTable> = {\n  key: \"firstNodeId\",\n  direction: \"ASC\",\n};\n\nconst connectionTypes: CellOption[] = [\n  {\n    id: \"cond\",\n    text: \"🔗 Conduction\",\n  },\n  {\n    id: \"conv\",\n    text: \"♨️ Convection️️\",\n  },\n  {\n    id: \"rad\",\n    text: \"☀️ Radiation️\",\n  },\n];\n\ntype ConnectionTableProps = {\n  rows: AppConnection[];\n  nodes: AppNode[];\n  onUpdateRow: (row: AppConnection) => void;\n  onDeleteRow: (row: AppConnection) => void;\n  onAddButton: () => void;\n};\n\nexport default function ConnectionTable(\n  props: ConnectionTableProps\n): React.ReactElement {\n  const { rows, nodes, onUpdateRow, onDeleteRow, onAddButton } = props;\n\n  const [sortState, setSortState, sortByState] =\n    useSortableTable<AppConnectionTable>(\n      defaultConnectionSortState,\n      \"secondNodeId\",\n      \"kind\"\n    );\n\n  const onSelectNewfirstNode = useCallback(\n    (id: string, option: CellOption) => {\n      const connection = rows.find((conn) => conn.id === id);\n      const newfirstNodeNode = nodes.find((node) => node.id === option.id);\n      if (\n        !connection ||\n        !newfirstNodeNode ||\n        newfirstNodeNode.id === connection.secondNode.id\n      ) {\n        return;\n      }\n      onUpdateRow({\n        ...connection,\n        firstNode: newfirstNodeNode,\n        firstNodeId: newfirstNodeNode.id,\n      });\n    },\n    [nodes, onUpdateRow, rows]\n  );\n\n  const onSelectNewsecondNode = useCallback(\n    (id: string, option: CellOption) => {\n      const connection = rows.find((conn) => conn.id === id);\n      const newsecondNodeNode = nodes.find((node) => node.id === option.id);\n      if (\n        !connection ||\n        !newsecondNodeNode ||\n        newsecondNodeNode.id === connection.firstNode.id\n      ) {\n        return;\n      }\n      onUpdateRow({\n        ...connection,\n        secondNode: newsecondNodeNode,\n        secondNodeId: newsecondNodeNode.id,\n      });\n    },\n    [nodes, onUpdateRow, rows]\n  );\n\n  const onSelectNewConnectionType = useCallback(\n    (id: string, option: CellOption) => {\n      const rowToUpdate = rows.find((conn) => conn.id === id);\n      if (rowToUpdate) {\n        onUpdateRow({\n          ...rowToUpdate,\n          kind: option.id as HSConnectionKind,\n        });\n      }\n    },\n    [onUpdateRow, rows]\n  );\n\n  const nodeOptions: CellOption[] = nodes.map((node) => ({\n    id: node.id,\n    text: node.name,\n  }));\n\n  const connectionColumns: ConnectionTableColumn[] = useMemo(\n    () => [\n      {\n        text: \"First Node\",\n        key: \"firstNodeId\",\n        width: 0.3,\n        minWidthPx: 100,\n        options: nodeOptions,\n        onSelectOption: onSelectNewfirstNode,\n      },\n      {\n        text: \"Second Node\",\n        key: \"secondNodeId\",\n        width: 0.3,\n        minWidthPx: 100,\n        options: nodeOptions,\n        onSelectOption: onSelectNewsecondNode,\n      },\n      {\n        text: \"Resistance\",\n        key: \"resistanceDegKPerW\",\n        width: 0.2,\n        minWidthPx: 100,\n      },\n      {\n        text: \"Kind\",\n        key: \"kind\",\n        width: 0.2,\n        minWidthPx: 100,\n        options: connectionTypes,\n        onSelectOption: onSelectNewConnectionType,\n      },\n    ],\n    [\n      nodeOptions,\n      onSelectNewConnectionType,\n      onSelectNewfirstNode,\n      onSelectNewsecondNode,\n    ]\n  );\n\n  const activeNodeIds = nodes\n    .filter((node) => node.isActive)\n    .map((node) => node.id);\n\n  const sortedRowsWithActiveInfo: AppConnectionTable[] = rows\n    .map((row) => {\n      return {\n        ...row,\n        isActive:\n          activeNodeIds.includes(row.firstNode.id) ||\n          activeNodeIds.includes(row.secondNode.id),\n      };\n    })\n    .sort(sortByState);\n\n  const tableRows = sortedRowsWithActiveInfo.map((row) => {\n    const cols = connectionColumns.map((col) => {\n      function makeStyledCell(\n        options: CellOption[],\n        setOption: CellOption | undefined\n      ) {\n        return (\n          <StyledCell key={col.key} width={col.width} minWidth={col.minWidthPx}>\n            <TableCell<AppConnectionTable>\n              row={row}\n              col={col}\n              options={options}\n              initiallySetOption={setOption}\n              onUpdateRow={onUpdateRow}\n              afterValue={getConnectionAfterValue(col, row)}\n            />\n          </StyledCell>\n        );\n      }\n\n      if (!!col.options) {\n        const setOption = col.options.find(\n          (option) => option.id === row[col.key]\n        );\n\n        const options = !setOption\n          ? []\n          : [\n              setOption,\n              ...filterConnectionOptions(\n                col.key,\n                col.options || [],\n                row,\n                rows\n              ).filter((opt) => opt.id !== setOption.id),\n            ];\n\n        return makeStyledCell(options, setOption);\n      } else {\n        return makeStyledCell([], undefined);\n      }\n    });\n\n    return (\n      <StyledRow\n        key={row.id}\n        heightOffsetPx={config.tabHeightPx}\n        isActive={row.isActive}\n      >\n        {cols}\n        <DeleteCell row={row} onDeleteRow={() => onDeleteRow(row)} />\n      </StyledRow>\n    );\n  });\n\n  return (\n    <StyledTableWrapper>\n      <StyledTable>\n        <TableHeader<AppConnectionTable>\n          columns={connectionColumns}\n          sortState={sortState}\n          setSortState={setSortState}\n        />\n        <StyledTableBody>{tableRows}</StyledTableBody>\n        <StyledAddButton onClick={onAddButton}>+</StyledAddButton>\n      </StyledTable>\n    </StyledTableWrapper>\n  );\n}\n","import React, { useState } from \"react\";\nimport styled from \"styled-components/macro\";\nimport config from \"../../config\";\n\nconst StyledTabsWrapper = styled.div`\n  display: inline-flex;\n  width: 100%;\n  flex-direction: column;\n  overflow: auto;\n  position: relative;\n`;\n\nconst StyledTabs = styled.div`\n  display: inline-flex;\n  width: 100%;\n  height: ${config.tabHeightPx}px;\n  justify-content: space-evenly;\n  position: sticky;\n  top: 0;\n  background: white;\n  box-sizing: border-box;\n  z-index: 1;\n`;\n\nconst StyledTab = styled.div<{ width: number }>`\n  display: inline-flex;\n  width: ${({ width }) => `${width * 100}%`};\n  cursor: pointer;\n  text-decoration: none;\n  align-items: center;\n  //background: lightgray;\n  //background: rgb(85, 9, 121);\n  background: linear-gradient(\n    90deg,\n    rgba(46, 228, 233, 1) 0%,\n    rgba(46, 228, 233, 1) 40%,\n    rgba(255, 0, 230, 1) 80%,\n    rgba(85, 9, 121, 1) 100%\n  );\n  border-radius: 5px 5px 0 0;\n  border: 1px solid black;\n  border-bottom: 2px solid black;\n\n  &:hover,\n  &:focus {\n    opacity: 0.7;\n  }\n`;\n\nconst StyledTabText = styled.div`\n  font-size: 1.1em;\n  padding: 0.2em 0.5em;\n\n  &.active {\n    font-weight: bold;\n  }\n`;\n\nconst StyledInnerContent = styled.div<{ topLeftRounded: boolean }>`\n  background: white;\n  position: relative;\n`;\n\ntype Tab = {\n  text: string;\n  component: React.ReactElement;\n  width: number; // between 0 and 1\n};\n\nexport type TabsProps = {\n  tabs: Tab[];\n};\n\nexport default function Tabs(props: TabsProps): React.ReactElement {\n  const [activeIdx, setActiveIdx] = useState(0);\n\n  return (\n    <StyledTabsWrapper>\n      {props.tabs.length > 1 && (\n        <StyledTabs>\n          {props.tabs.map((tab, idx) => {\n            return (\n              <StyledTab\n                key={tab.text}\n                tabIndex={0}\n                onClick={() => setActiveIdx(idx)}\n                onKeyUp={(event: React.KeyboardEvent) => {\n                  if (event.key === \"Enter\") {\n                    setActiveIdx(idx);\n                  }\n                }}\n                width={tab.width}\n              >\n                <StyledTabText className={idx === activeIdx ? \"active\" : \"\"}>\n                  {tab.text}\n                </StyledTabText>\n              </StyledTab>\n            );\n          })}\n        </StyledTabs>\n      )}\n\n      <StyledInnerContent topLeftRounded={props.tabs.length <= 1}>\n        {props.tabs.filter((_, idx) => idx === activeIdx)[0].component}\n      </StyledInnerContent>\n    </StyledTabsWrapper>\n  );\n}\n","export type Point = {\n  x: number;\n  y: number;\n};\n\nexport const ORIGIN = Object.freeze({ x: 0, y: 0 });\n\nexport function makePoint(x: number, y: number): Point {\n  return { x, y };\n}\n\nexport function addPoints(p1: Point, p2: Point): Point {\n  return { x: p1.x + p2.x, y: p1.y + p2.y };\n}\n\nexport function diffPoints(p1: Point, p2: Point): Point {\n  return { x: p1.x - p2.x, y: p1.y - p2.y };\n}\n\nexport function scalePoint(p1: Point, scale: number): Point {\n  return { x: p1.x / scale, y: p1.y / scale };\n}\n\n// export function distanceBetweenPoints(p1: Point, p2: Point): number {\n//   return Math.sqrt(Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2));\n// }\n","import { makeNode } from \"hotstuff-network\";\nimport { AppConnection, AppNode, ModalState, PanelSizes, Timing } from \"./App\";\nimport config from \"./config\";\nimport { ORIGIN } from \"./utils/pointUtils\";\nimport { CanvasViewState } from \"./components/Canvas/Canvas\";\nimport { makeNewConnection } from \"./utils/nodeConnectionUtils\";\n\nconst jerryNode = makeNode({\n  name: \"Jerry the Cat\",\n  temperatureDegC: 38.3,\n  capacitanceJPerDegK: 16.2e3, // 3.6kJ/kg/degK * 4.5kg\n  powerGenW: 100, // ??\n  isBoundary: false,\n});\nconst jerryAppNode: AppNode = {\n  ...jerryNode,\n  center: { x: 200, y: 150 },\n  isActive: false,\n  textDirection: \"L\",\n};\n\nconst bedNode = makeNode({\n  name: \"Heated Cat Bed\",\n  temperatureDegC: 40, // ??\n  capacitanceJPerDegK: 10e3,\n  powerGenW: 4,\n  isBoundary: false,\n});\nconst bedAppNode: AppNode = {\n  ...bedNode,\n  center: { x: 500, y: 150 },\n  isActive: false,\n  textDirection: \"R\",\n};\n\nconst airNode = makeNode({\n  name: \"Apartment Air\",\n  temperatureDegC: 22.5,\n  capacitanceJPerDegK: 6e5, // 1.0035J/g/degK * 600,000g\n  powerGenW: 0,\n  isBoundary: false,\n});\nconst airAppNode: AppNode = {\n  ...airNode,\n  center: { x: 350, y: 300 },\n  isActive: false,\n  textDirection: \"D\",\n};\n\nexport const defaultNodes: AppNode[] = [jerryAppNode, bedAppNode, airAppNode];\n\nexport const defaultConnections: AppConnection[] = [\n  makeNewConnection(jerryNode, bedNode, \"cond\", 2.5), // 0.01m / 0.1m^2 / 0.04W/m/degK\n  makeNewConnection(airNode, jerryNode, \"conv\", 0.33), // 1 / 0.3m^2 / 10W/m^2/degK\n  makeNewConnection(airNode, bedNode, \"conv\", 0.67), // 1 / 0.3m^2 / 5W/m^2/degK\n];\n\nexport const defaultTiming: Timing = {\n  timeStepS: config.defaultTimeStepSeconds,\n  totalTimeS: config.defaultTotalTimeSeconds,\n};\n\nexport const defaultCanvasViewState: CanvasViewState = {\n  offset: ORIGIN,\n  scale: 1,\n};\n\nexport const defaultPanelSizes: PanelSizes = {\n  editorWidthFraction: config.defaultEditorWidthFraction,\n  canvasHeightFraction: config.defaultCanvasHeightFraction,\n  tableHeightFraction: config.defaultTableHeightFraction,\n};\n\nexport const defaultModalState: ModalState = {\n  visible: false,\n  type: \"theory\",\n};\n\nexport const defaultAppState = {\n  output: undefined,\n  timing: defaultTiming,\n  nodes: defaultNodes,\n  connections: defaultConnections,\n  canvasViewState: defaultCanvasViewState,\n  savedCanvasState: defaultCanvasViewState,\n  panelSizes: defaultPanelSizes,\n};\n","import * as React from \"react\";\nimport { useState } from \"react\";\nimport styled from \"styled-components/macro\";\nimport EditableNumberInput from \"./EditableNumberInput\";\nimport { AppState, ModalState, Timing } from \"../../App\";\nimport { defaultAppState } from \"../../default\";\n\nconst StyledModelControlsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  justify-content: center;\n  align-items: center;\n  border-top: 3px solid black;\n  flex-wrap: wrap;\n`;\n\nconst StyledButton = styled.button`\n  margin-top: 5px;\n  margin-bottom: 5px;\n`;\n\nconst StyledImport = styled.div`\n  padding: 0.2em;\n  border: 1px solid black;\n`;\n\nconst StyledInput = styled.input`\n  margin-right: 0.5em;\n`;\n\nconst StyledTopControls = styled.div`\n  display: flex;\n  > * {\n    margin: 1em;\n  }\n`;\n\nconst StyledTimeControls = styled.div``;\n\nconst StyledTimeControl = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n  align-items: center;\n  justify-content: space-between;\n  margin: 0.5em;\n`;\n\nconst StyledInputWrapper = styled.div`\n  border: 1px solid black;\n  border-radius: 2px;\n  max-width: 3em;\n  height: 1.5em;\n`;\n\nconst StyledLabel = styled.label`\n  margin-right: 0.2em;\n`;\n\nexport type ModelControlsProps = {\n  appState: AppState;\n  setAppState: React.Dispatch<React.SetStateAction<AppState>>;\n  setModalState: React.Dispatch<React.SetStateAction<ModalState>>;\n  onRunModel: () => void;\n  setTiming: (newTiming: Timing) => void;\n};\n\nexport default function ModelControls(\n  props: ModelControlsProps\n): React.ReactElement {\n  const { appState, setAppState, setModalState, onRunModel, setTiming } = props;\n\n  const [stagedAppState, setStagedAppState] = useState<string>(\"\");\n\n  return (\n    <StyledModelControlsWrapper>\n      <StyledTimeControls>\n        <StyledTimeControl>\n          <StyledLabel>Run Time [s]:</StyledLabel>\n          <StyledInputWrapper>\n            <EditableNumberInput\n              initialValue={appState.timing.totalTimeS}\n              onBlur={(newTotalTimeS: number) =>\n                setTiming({ ...appState.timing, totalTimeS: newTotalTimeS })\n              }\n            />\n          </StyledInputWrapper>\n        </StyledTimeControl>\n        <StyledTimeControl>\n          <StyledLabel>Time Step [s]:</StyledLabel>\n          <StyledInputWrapper>\n            <EditableNumberInput\n              initialValue={appState.timing.timeStepS}\n              onBlur={(newTimeStepS: number) =>\n                setTiming({\n                  ...appState.timing,\n                  timeStepS: newTimeStepS,\n                })\n              }\n            />\n          </StyledInputWrapper>\n        </StyledTimeControl>\n      </StyledTimeControls>\n      <StyledTopControls>\n        <StyledButton onClick={onRunModel}>Run Model</StyledButton>\n        <StyledButton\n          onClick={() =>\n            navigator.clipboard.writeText(JSON.stringify(appState))\n          }\n        >\n          Copy Model to ClipBoard\n        </StyledButton>\n      </StyledTopControls>\n      <StyledImport>\n        <StyledLabel>Model:</StyledLabel>\n        <StyledInput\n          value={stagedAppState}\n          onChange={(event) => setStagedAppState(event.target.value)}\n        />\n        <StyledButton\n          onClick={() => {\n            setAppState(JSON.parse(stagedAppState));\n            setStagedAppState(\"\");\n          }}\n        >\n          Import Model\n        </StyledButton>\n      </StyledImport>\n\n      <StyledButton\n        onClick={() =>\n          setModalState((prev) => ({\n            ...prev,\n            visible: true,\n            type: \"confirm\",\n            onConfirm: () => setAppState(defaultAppState),\n            confirmText: [\n              \"This will reset the entire model, discarding all your current nodes, connections, parameters and output data.\",\n              \"Permanently reset everything?\",\n            ],\n          }))\n        }\n      >\n        Reset\n      </StyledButton>\n    </StyledModelControlsWrapper>\n  );\n}\n","import * as React from \"react\";\nimport {\n  AppConnection,\n  AppNode,\n  AppState,\n  ModalState,\n  Timing,\n} from \"../../App\";\nimport NodeTable from \"./EditableTable/NodeTable/NodeTable\";\nimport ConnectionTable from \"./EditableTable/ConnectionTable/ConnectionTable\";\nimport Tabs from \"../Tabs/Tabs\";\nimport ModelControls from \"./ModelControls\";\nimport {\n  StyledEditor,\n  StyledModelControlsWrapper,\n  StyledTables,\n} from \"./style\";\n\ntype SidebarProps = {\n  appState: AppState;\n  setAppState: React.Dispatch<React.SetStateAction<AppState>>;\n  setModalState: React.Dispatch<React.SetStateAction<ModalState>>;\n  width: number;\n  height: number;\n  setTiming: (newTiming: Timing) => void;\n  onAddNode: () => void;\n  onAddConnection: () => void;\n  updateNodes: (nodes: AppNode[], clearActiveNodes: boolean) => void;\n  deleteNodes: (nodeIds: string[]) => void;\n  updateConnections: (connections: AppConnection[]) => void;\n  deleteConnections: (connectionIds: string[]) => void;\n  onRunModel: () => void;\n};\n\nexport default function Sidebar(props: SidebarProps): React.ReactElement {\n  const {\n    appState,\n    setAppState,\n    setModalState,\n    width,\n    height,\n    setTiming,\n    onAddNode,\n    onAddConnection,\n    updateNodes,\n    deleteNodes,\n    updateConnections,\n    deleteConnections,\n    onRunModel,\n  } = props;\n\n  const nodeTable = (\n    <NodeTable\n      rows={appState.nodes}\n      onUpdateRow={(node: AppNode) => updateNodes([node], false)}\n      onDeleteRow={(node: AppNode) => deleteNodes([node.id])}\n      onAddButton={onAddNode}\n    />\n  );\n\n  const connectionTable = (\n    <ConnectionTable\n      rows={appState.connections}\n      nodes={appState.nodes}\n      onUpdateRow={(connection: AppConnection) =>\n        updateConnections([connection])\n      }\n      onDeleteRow={(connection: AppConnection) =>\n        deleteConnections([connection.id])\n      }\n      onAddButton={onAddConnection}\n    />\n  );\n\n  return (\n    <StyledEditor width={width} height={height}>\n      <StyledTables heightFrac={appState.panelSizes.tableHeightFraction}>\n        <Tabs\n          tabs={[\n            { text: \"Nodes\", component: nodeTable, width: 0.5 },\n            { text: \"Connections\", component: connectionTable, width: 0.5 },\n          ]}\n        />\n      </StyledTables>\n      <StyledModelControlsWrapper\n        heightFrac={1 - appState.panelSizes.tableHeightFraction}\n      >\n        <ModelControls\n          appState={appState}\n          setAppState={setAppState}\n          setModalState={setModalState}\n          onRunModel={onRunModel}\n          setTiming={setTiming}\n        />\n      </StyledModelControlsWrapper>\n    </StyledEditor>\n  );\n}\n","import {\n  CartesianGrid,\n  Legend,\n  LineChart,\n  Tooltip,\n  TooltipPayload,\n  TooltipProps,\n  XAxis,\n  YAxis,\n} from \"recharts\";\nimport * as React from \"react\";\nimport { PlotDimensions } from \"./Plot\";\nimport styled from \"styled-components/macro\";\n\nconst StyledToolTip = styled.div`\n  background: rgba(255, 255, 255, 0.7);\n  padding: 0.2em;\n  //border-radius: 10px;\n  border: 1px solid black;\n`;\n\nconst StyledToolTipTitle = styled.div`\n  font-size: 1em;\n  font-weight: bold;\n`;\n\nconst StyledToolTipItem = styled.div<{ color: string }>`\n  color: ${(props) => props.color};\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst StyledToolTipValue = styled.div<{ after: string }>`\n  margin-left: 1em;\n\n  &::after {\n    content: \"${(props) => props.after}\";\n  }\n`;\n\nfunction CustomTooltip(props: TooltipProps & { after: string }) {\n  const { active, payload, label, after } = props;\n\n  if (active && payload && payload.length) {\n    const sortedPayload = [...payload].sort(\n      (a: TooltipPayload, b: TooltipPayload) => {\n        if (a.value > b.value) {\n          return -1;\n        } else if (a.value === b.value) {\n          if (a.name > b.name) {\n            return 1;\n          } else {\n            return -1;\n          }\n        } else {\n          return 1;\n        }\n      }\n    );\n\n    return (\n      <StyledToolTip>\n        <StyledToolTipTitle>{`Time: ${label}s`}</StyledToolTipTitle>\n        {sortedPayload.map((item) => {\n          return (\n            <StyledToolTipItem key={item.name} color={item.color || \"black\"}>\n              <div>{item.name}</div>\n              <StyledToolTipValue after={after}>\n                {item.value}\n              </StyledToolTipValue>\n            </StyledToolTipItem>\n          );\n        })}\n      </StyledToolTip>\n    );\n  }\n\n  return null;\n}\n\ntype LinePlotProps = {\n  plotDimensions: PlotDimensions;\n  plotData?: ReadonlyArray<Record<string, unknown>>;\n  lines: React.ReactElement[];\n  xAxisKey: string;\n  xLabel: string;\n  yLabel: string;\n  yDomain?: [number, number];\n  unit: string;\n};\n\nexport default function LinePlot(props: LinePlotProps): React.ReactElement {\n  const {\n    plotDimensions,\n    plotData,\n    lines,\n    xAxisKey,\n    xLabel,\n    yLabel,\n    yDomain,\n    unit,\n  } = props;\n\n  return (\n    <LineChart\n      height={plotDimensions.height}\n      width={plotDimensions.width}\n      margin={plotDimensions.margin}\n      data={plotData}\n    >\n      <CartesianGrid strokeDasharray=\"3 3\" />\n      <XAxis\n        dataKey={xAxisKey}\n        label={{\n          value: xLabel,\n          position: \"center\",\n          dy: 20,\n        }}\n      />\n      <YAxis\n        domain={yDomain}\n        label={{\n          value: yLabel,\n          position: \"center\",\n          angle: -90,\n          dx: -20,\n        }}\n      />\n      <Tooltip content={<CustomTooltip after={unit} />} />\n      <Legend\n        layout=\"horizontal\"\n        verticalAlign=\"top\"\n        align=\"center\"\n        wrapperStyle={{\n          paddingLeft: \"10px\",\n          paddingBottom: \"10px\",\n        }}\n      />\n      {lines}\n    </LineChart>\n  );\n}\n","import * as React from \"react\";\nimport { useMemo } from \"react\";\nimport { Line } from \"recharts\";\nimport styled from \"styled-components\";\nimport { emptyOutput, ModelOutput } from \"hotstuff-network\";\nimport LinePlot from \"./LinePlot\";\nimport Tabs from \"../Tabs/Tabs\";\nimport config from \"../../config\";\n\nconst { maxPlotPoints, plotDomainMarginPercent } = config;\n\nconst colors = [\n  \"#2ecc71\",\n  \"#3498db\",\n  \"#9b59b6\",\n  \"#e74c3c\",\n  \"#e67e22\",\n  \"#34495e\",\n  \"#16a085\",\n];\n\nconst StyledCharts = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n\n  .chart {\n    width: 60% !important;\n    max-width: 900px;\n\n    @media only screen and (max-width: 600px) {\n      width: 90% !important;\n      touch-action: pan-y;\n    }\n  }\n`;\n\nconst StyledPlot = styled.div<{ height: number; width: number }>`\n  width: 100%;\n  height: ${(props) => props.height}px;\n  border-top: 3px solid black;\n  margin: 0;\n  padding: 0;\n`;\n\ntype Margin = {\n  left: number;\n  right: number;\n  top: number;\n  bottom: number;\n};\n\nexport type PlotDimensions = {\n  height: number;\n  width: number;\n  margin: Margin;\n};\n\ntype TimeSeriesPlotData = {\n  time: number;\n  [key: string]: number;\n};\n\ntype PlotDomain = [number, number];\n\nfunction roundToNearestTenth(input: number): number {\n  return Math.round(input * 10) / 10;\n}\n\nfunction plotShape(\n  data: ModelOutput\n): [TimeSeriesPlotData[], PlotDomain, TimeSeriesPlotData[], PlotDomain] {\n  // the number of points depends on the order of magnitude\n  const lowerMag = Math.floor(Math.log10(data.totalTimeS));\n  const divisibleBy = Math.pow(10, lowerMag - 1);\n  function include(val: number) {\n    return Math.abs(val % divisibleBy) === 0;\n  }\n\n  const includeAll = data.timeSeriesS.length < maxPlotPoints;\n\n  const tempsAtAllTimes: TimeSeriesPlotData[] = [];\n  let minTemp = 1e9;\n  let maxTemp = -1e9;\n  const heatTransfersAtAllTimes: TimeSeriesPlotData[] = [];\n  let minHeatTransfer = 1e9;\n  let maxHeatTransfer = -1e9;\n\n  data.timeSeriesS.forEach((t, idx) => {\n    if (includeAll || include(t)) {\n      const temp: TimeSeriesPlotData = { time: t };\n      const ht: TimeSeriesPlotData = { time: t };\n\n      data.nodeResults.forEach((nodeResult) => {\n        const tempVal = nodeResult.tempDegC[idx];\n        if (tempVal < minTemp) {\n          minTemp = tempVal;\n        } else if (tempVal > maxTemp) {\n          maxTemp = tempVal;\n        }\n        temp[nodeResult.node.name] = roundToNearestTenth(tempVal);\n      });\n\n      data.connectionResults.forEach((connectionResult) => {\n        const heatTransferVal = connectionResult.heatTransferW[idx];\n        if (heatTransferVal < minHeatTransfer) {\n          minHeatTransfer = heatTransferVal;\n        } else if (heatTransferVal > maxHeatTransfer) {\n          maxHeatTransfer = heatTransferVal;\n        }\n        ht[\n          `${connectionResult.connection.firstNode.name} to ${connectionResult.connection.secondNode.name}`\n        ] = roundToNearestTenth(heatTransferVal);\n      });\n\n      tempsAtAllTimes.push(temp);\n      heatTransfersAtAllTimes.push(ht);\n    }\n  });\n  return [\n    tempsAtAllTimes,\n    [minTemp, maxTemp],\n    heatTransfersAtAllTimes,\n    [minHeatTransfer, maxHeatTransfer],\n  ];\n}\n\ntype PlotProps = {\n  plotDimensions: PlotDimensions;\n  modelOutput?: ModelOutput;\n};\n\nexport default function Plot(props: PlotProps): React.ReactElement {\n  const modelHasOutput = !!(\n    props.modelOutput && props.modelOutput.nodeResults.length > 0\n  );\n  const res =\n    modelHasOutput && props.modelOutput ? props.modelOutput : emptyOutput;\n\n  const [tempPlotData, tempDomain, heatTransferPlotData, heatTransferDomain] =\n    plotShape(res);\n\n  const yTempDomainMargin =\n    (tempDomain[1] - tempDomain[0]) * plotDomainMarginPercent;\n  const yTempDomain: [number, number] | undefined = modelHasOutput\n    ? [\n        Math.floor(tempDomain[0] - yTempDomainMargin),\n        Math.ceil(tempDomain[1] + yTempDomainMargin),\n      ]\n    : undefined;\n\n  const yHeatTransferDomainMargin =\n    (heatTransferDomain[1] - heatTransferDomain[0]) * plotDomainMarginPercent;\n  const yHeatTransferDomain: [number, number] | undefined = modelHasOutput\n    ? [\n        Math.floor(heatTransferDomain[0] - yHeatTransferDomainMargin),\n        Math.ceil(heatTransferDomain[1] + yHeatTransferDomainMargin),\n      ]\n    : undefined;\n\n  const heatTransferLines = useMemo(\n    () =>\n      res.connectionResults.map((connectionResult, idx) => {\n        return (\n          <Line\n            key={connectionResult.connection.id}\n            type={\"monotone\"}\n            dataKey={`${connectionResult.connection.firstNode.name} to ${connectionResult.connection.secondNode.name}`}\n            stroke={colors[idx]}\n            activeDot={{ r: 8 }}\n            isAnimationActive={false}\n          />\n        );\n      }),\n    [res.connectionResults]\n  );\n\n  const tempLines = useMemo(\n    () =>\n      res.nodeResults.map((nodeResult, idx) => {\n        return (\n          <Line\n            key={nodeResult.node.id}\n            type={\"monotone\"}\n            dataKey={nodeResult.node.name}\n            stroke={colors[idx]}\n            activeDot={{ r: 8 }}\n            isAnimationActive={false}\n          />\n        );\n      }),\n    [res.nodeResults]\n  );\n\n  const tempPlot = (\n    <LinePlot\n      plotDimensions={props.plotDimensions}\n      plotData={tempPlotData}\n      lines={tempLines}\n      xAxisKey={\"time\"}\n      xLabel={\"Time [s]\"}\n      yLabel={\"Temperature [degC]\"}\n      yDomain={yTempDomain}\n      unit={\"degC\"}\n    />\n  );\n\n  const heatTransferPlot = (\n    <LinePlot\n      plotDimensions={props.plotDimensions}\n      plotData={heatTransferPlotData}\n      lines={heatTransferLines}\n      xAxisKey={\"time\"}\n      xLabel={\"Time [s]\"}\n      yLabel={\"Heat Transfer [Watts]\"}\n      yDomain={yHeatTransferDomain}\n      unit={\"W\"}\n    />\n  );\n\n  return (\n    <StyledPlot\n      height={props.plotDimensions.height}\n      width={props.plotDimensions.width}\n    >\n      <StyledCharts>\n        <Tabs\n          tabs={[\n            {\n              text: \"Temperature\",\n              component: tempPlot,\n              width: 0.5,\n            },\n            {\n              text: \"Heat Transfer\",\n              component: heatTransferPlot,\n              width: 0.5,\n            },\n          ]}\n        />\n      </StyledCharts>\n    </StyledPlot>\n  );\n}\n","import { diffPoints, ORIGIN, Point, scalePoint } from \"../../utils/pointUtils\";\nimport config from \"../../config\";\nimport { Direction } from \"../../App\";\nimport * as React from \"react\";\nimport { CanvasState } from \"./Canvas\";\nimport { scaleDiverging } from \"d3-scale\";\nimport { HSConnectionKind } from \"hotstuff-network\";\n\nconst { activeNodeOutlineWidthPx, minRadiusPx, maxRadiusPx } = config;\nexport const DEFAULT_RADIUS = Math.floor((minRadiusPx + maxRadiusPx) / 2);\n\nfunction drawCircle(\n  context: CanvasRenderingContext2D,\n  center: Point,\n  radius: number,\n  color: string\n): void {\n  context.save();\n  context.beginPath();\n  context.arc(center.x, center.y, radius, 0, 2 * Math.PI);\n  context.fillStyle = color;\n  context.fill();\n  context.closePath();\n  context.restore();\n}\n\nfunction drawCircleOutline(\n  context: CanvasRenderingContext2D,\n  center: Point,\n  radius: number,\n  color: string\n): void {\n  context.save();\n  context.beginPath();\n  // inset\n  context.arc(\n    center.x,\n    center.y,\n    radius - activeNodeOutlineWidthPx / 2,\n    0,\n    2 * Math.PI\n  );\n  context.lineWidth = activeNodeOutlineWidthPx;\n  context.strokeStyle = color;\n  context.stroke();\n  context.closePath();\n  context.restore();\n}\n\nfunction drawHashPattern(\n  context: CanvasRenderingContext2D,\n  center: Point,\n  radius: number\n) {\n  context.save();\n  context.lineWidth = 2;\n  context.fillStyle = \"#FFFFFF\";\n\n  const delta = 4.5;\n  const buffer = 1;\n  const circle = 2;\n\n  // save the canvas above, now transform it for ease of drawing\n  context.translate(center.x, center.y);\n  context.rotate(Math.PI / 4);\n\n  // draw horizontal line\n  context.beginPath();\n  context.moveTo(-radius, 0);\n  context.lineTo(radius, 0);\n  context.stroke();\n\n  // draw smaller horizontal lines offset vertically from center\n  let h = 0; // vertical distance from center\n  while (h + delta < radius) {\n    h = h + delta;\n    const newRadius = radius * Math.sin(Math.acos(h / radius));\n    context.moveTo(-newRadius - buffer, h);\n    context.lineTo(newRadius + buffer, h);\n    context.stroke();\n    context.moveTo(-newRadius - buffer, -h);\n    context.lineTo(newRadius + buffer, -h);\n    context.stroke();\n  }\n  context.closePath();\n\n  // clip off the extra bits around the circle\n  context.beginPath();\n  context.arc(0, 0, radius + circle, 0, Math.PI * 2, false);\n  context.arc(0, 0, radius, 0, Math.PI * 2, true);\n  context.fill();\n\n  context.restore();\n}\n\nfunction drawNodeName(\n  context: CanvasRenderingContext2D,\n  name: string,\n  center: Point,\n  radius: number,\n  textDirection: Direction\n) {\n  const bufferText = 2;\n  context.save();\n  context.font = \"14px Helvetica\";\n  const textMetrics = context.measureText(name);\n  const width = textMetrics.width;\n  context.translate(center.x, center.y);\n  if (textDirection === \"D\") {\n    context.fillText(\n      name,\n      -width / 2,\n      textMetrics.actualBoundingBoxAscent + radius + bufferText\n    );\n  } else if (textDirection === \"R\") {\n    context.fillText(\n      name,\n      radius + bufferText,\n      textMetrics.actualBoundingBoxAscent / 2\n    );\n  } else if (textDirection === \"U\") {\n    context.fillText(\n      name,\n      -width / 2,\n      -(textMetrics.actualBoundingBoxDescent + radius + bufferText)\n    );\n  } else {\n    context.fillText(\n      name,\n      -(width + radius + bufferText),\n      textMetrics.actualBoundingBoxAscent / 2\n    );\n  }\n  context.restore();\n}\n\nexport function drawNode(\n  context: CanvasRenderingContext2D,\n  name: string,\n  center: Point,\n  radius: number,\n  color: string,\n  isActive: boolean,\n  isBoundary: boolean,\n  textDirection: Direction\n): void {\n  drawCircle(context, center, radius, color);\n  if (isActive) {\n    drawCircleOutline(context, center, radius, \"black\");\n  }\n  if (isBoundary) {\n    drawHashPattern(context, center, radius);\n  }\n  drawNodeName(context, name, center, radius, textDirection);\n}\n\nexport function drawBidirectionalArrow(\n  context: CanvasRenderingContext2D,\n  start: Point,\n  end: Point,\n  color: string,\n  startOffset = 0,\n  endOffset = 0\n): void {\n  context.save();\n  context.beginPath();\n  context.strokeStyle = color;\n  context.lineWidth = 2;\n  const headLength = 9;\n  const headWidth = 4;\n  const arrowGap = 0;\n  const dx = end.x - start.x;\n  const dy = end.y - start.y;\n  const angle = Math.atan2(dy, dx);\n  const length = Math.sqrt(dx * dx + dy * dy);\n  const adjLength = length - endOffset;\n\n  context.translate(start.x, start.y);\n  context.rotate(angle);\n\n  context.beginPath();\n  context.moveTo(startOffset, arrowGap);\n  context.lineTo(adjLength, arrowGap);\n  context.moveTo(adjLength - headLength, headWidth + arrowGap);\n  context.lineTo(adjLength, arrowGap);\n  context.lineTo(adjLength - headLength, -(headWidth - arrowGap));\n\n  context.moveTo(adjLength, -arrowGap);\n  context.lineTo(startOffset, -arrowGap);\n  context.moveTo(startOffset + headLength, -(headWidth + arrowGap));\n  context.lineTo(startOffset, -arrowGap);\n  context.lineTo(startOffset + headLength, headWidth - arrowGap);\n\n  context.stroke();\n  context.closePath();\n  context.restore();\n}\n\nexport function drawUnidirectionalArrow(\n  context: CanvasRenderingContext2D,\n  start: Point,\n  end: Point,\n  color: string,\n  startOffset = 0,\n  endOffset = 0\n): void {\n  context.save();\n  context.beginPath();\n  context.strokeStyle = color;\n  context.lineWidth = 2;\n  const headLength = 9;\n  const headWidth = 4;\n  const dx = end.x - start.x;\n  const dy = end.y - start.y;\n  const angle = Math.atan2(dy, dx);\n  const length = Math.sqrt(dx * dx + dy * dy);\n  const adjLength = length - endOffset;\n\n  context.translate(start.x, start.y);\n  context.rotate(angle);\n\n  context.beginPath();\n  context.moveTo(startOffset, 0);\n  context.lineTo(adjLength, 0);\n  context.moveTo(adjLength - headLength, -headWidth);\n  context.lineTo(adjLength, 0);\n  context.lineTo(adjLength - headLength, headWidth);\n  context.stroke();\n  context.closePath();\n  context.restore();\n}\n\nexport function drawArrowWithoutHead(\n  context: CanvasRenderingContext2D,\n  start: Point,\n  end: Point,\n  color: string,\n  startOffset = 0,\n  endOffset = 0\n): void {\n  context.save();\n  context.beginPath();\n  context.strokeStyle = color;\n  context.lineWidth = 2;\n  const dx = end.x - start.x;\n  const dy = end.y - start.y;\n  const angle = Math.atan2(dy, dx);\n  const length = Math.sqrt(dx * dx + dy * dy);\n  context.translate(start.x, start.y);\n  context.rotate(angle);\n  context.beginPath();\n  context.moveTo(startOffset, 0);\n  const adjLength = length - endOffset;\n  context.lineTo(adjLength, 0);\n  context.stroke();\n  context.closePath();\n  context.restore();\n}\n\nexport function drawClearBox(\n  context: CanvasRenderingContext2D,\n  start: Point,\n  end: Point,\n  color: string\n): void {\n  context.save();\n  context.beginPath();\n  context.fillStyle = color;\n  context.globalAlpha = 0.2;\n  context.fillRect(start.x, start.y, end.x - start.x, end.y - start.y);\n  context.closePath();\n\n  // outline\n  context.beginPath();\n  context.strokeStyle = color;\n  context.rect(start.x, start.y, end.x - start.x, end.y - start.y);\n  context.stroke();\n  context.closePath();\n\n  context.restore();\n}\n\nexport function drawConnection(\n  context: CanvasRenderingContext2D,\n  firstNodeCenter: Point,\n  firstNodeRadius: number,\n  secondNodeCenter: Point,\n  secondNodeRadius: number,\n  kind: HSConnectionKind\n): void {\n  if ([\"cond\", \"conv\"].includes(kind)) {\n    drawBidirectionalArrow(\n      context,\n      firstNodeCenter,\n      secondNodeCenter,\n      \"black\",\n      firstNodeRadius,\n      secondNodeRadius\n    );\n  } else {\n    drawUnidirectionalArrow(\n      context,\n      firstNodeCenter,\n      secondNodeCenter,\n      \"black\",\n      firstNodeRadius,\n      secondNodeRadius\n    );\n  }\n}\n\nexport function intersectsCircle(\n  point: Point,\n  circleCenter: Point,\n  radius: number\n): boolean {\n  const deltaX = point.x - circleCenter.x;\n  const deltaY = point.y - circleCenter.y;\n  return Math.pow(deltaX, 2) + Math.pow(deltaY, 2) <= Math.pow(radius, 2);\n}\n\nexport function isInsideBox(\n  startBox: Point,\n  endBox: Point,\n  point: Point\n): boolean {\n  const [topLeft, bottomRight] =\n    startBox.x < endBox.x && startBox.y < endBox.y\n      ? [startBox, endBox]\n      : [endBox, startBox];\n\n  const [bottomLeft, topRight] =\n    startBox.x < endBox.x && startBox.y > endBox.y\n      ? [startBox, endBox]\n      : [endBox, startBox];\n\n  return (\n    (topLeft.x <= point.x &&\n      point.x <= bottomRight.x &&\n      topLeft.y <= point.y &&\n      point.y <= bottomRight.y) ||\n    (bottomLeft.x <= point.x &&\n      point.x <= topRight.x &&\n      topRight.y <= point.y &&\n      point.y <= bottomLeft.y)\n  );\n}\n\nexport function calculateMousePositionOnElement(\n  event: React.MouseEvent | MouseEvent,\n  element: HTMLElement\n): Point {\n  const viewportMousePos = { x: event.pageX, y: event.pageY };\n  const boundingRect = element.getBoundingClientRect();\n  const topLeftCanvasPos = { x: boundingRect.left, y: boundingRect.top };\n  return diffPoints(viewportMousePos, topLeftCanvasPos);\n}\n\nfunction canvasMouseToNodeCoords(\n  mouse: Point,\n  offset: Point,\n  scale: number\n): Point {\n  return diffPoints(scalePoint(mouse, scale), offset);\n}\n\nexport function mouseToNodeCoords(\n  event: React.MouseEvent | MouseEvent,\n  canvasState: CanvasState\n): Point {\n  if (canvasState.context) {\n    const canvasMouse = calculateMousePositionOnElement(\n      event,\n      canvasState.context.canvas\n    );\n    return canvasMouseToNodeCoords(\n      canvasMouse,\n      canvasState.canvasViewState.offset,\n      canvasState.canvasViewState.scale\n    );\n  } else {\n    return ORIGIN;\n  }\n}\n\nexport function rotatedDirection(direction: Direction): Direction {\n  // assume rotate counter-clockwise\n  if (direction === \"D\") {\n    return \"R\";\n  } else if (direction === \"R\") {\n    return \"U\";\n  } else if (direction === \"U\") {\n    return \"L\";\n  } else {\n    return \"D\";\n  }\n}\n\nexport function getCanvasCenter(\n  canvasWidth: number,\n  canvasHeight: number,\n  offset: Point,\n  scale: number\n): Point {\n  const topLeftPoint = offset;\n  const distanceToCenter = scalePoint(\n    { x: canvasWidth, y: canvasHeight },\n    2 * scale\n  );\n  return diffPoints(distanceToCenter, topLeftPoint);\n}\n\nexport function determineRadius(\n  capacitance: number,\n  allCapacitances: number[]\n): number {\n  const min = Math.min(...allCapacitances);\n  const max = Math.max(...allCapacitances);\n  // cap = min -> minRadius\n  // cap = max -> maxRadius\n  // radius = (cap - min) / (max - min) * 20 + 10\n  if (min === max) {\n    return DEFAULT_RADIUS;\n  }\n  return (\n    ((capacitance - min) / (max - min)) * (maxRadiusPx - minRadiusPx) +\n    minRadiusPx\n  );\n}\n\nexport function determineColor(\n  temperature: number,\n  allTemperatures: number[]\n): string {\n  const minTemp = Math.min(...allTemperatures);\n  const maxTemp = Math.max(...allTemperatures);\n  const range = maxTemp - minTemp;\n  const test = scaleDiverging<string>()\n    .domain([minTemp - range / 3, (minTemp + maxTemp) / 2, maxTemp + range / 3])\n    .range([\"blue\", \"#ababab\", \"red\"]);\n  return test(temperature);\n}\n","import * as React from \"react\";\nimport { useCallback, useLayoutEffect, useRef, useState } from \"react\";\nimport {\n  addPoints,\n  diffPoints,\n  ORIGIN,\n  Point,\n  scalePoint,\n} from \"../../../utils/pointUtils\";\nimport config from \"../../../config\";\nimport { calculateMousePositionOnElement } from \"../canvasUtils\";\nimport { CanvasViewState } from \"../Canvas\";\n\nconst { maxZoom, minZoom, zoomSensitivity, maxZoomDelta } = config;\n\nexport default function usePanZoomCanvas(\n  canvasRef: React.RefObject<HTMLCanvasElement>,\n  canvasViewState: CanvasViewState,\n  setCanvasViewState: (newCanvasViewState: CanvasViewState) => void\n): [\n  CanvasRenderingContext2D | null,\n  React.Dispatch<React.SetStateAction<CanvasRenderingContext2D | null>>,\n  (event: React.MouseEvent | MouseEvent) => void\n] {\n  const [context, setContext] = useState<CanvasRenderingContext2D | null>(null);\n  const mousePosRef = useRef<Point>(ORIGIN);\n  const lastMousePosRef = useRef<Point>(ORIGIN);\n  const lastCanvasViewState = useRef<CanvasViewState>(canvasViewState);\n\n  // functions for panning\n  const mouseMove = useCallback(\n    (event: React.MouseEvent | MouseEvent) => {\n      if (context) {\n        // update mouse position\n        const newMousePos = calculateMousePositionOnElement(\n          event,\n          context.canvas\n        );\n        lastMousePosRef.current = mousePosRef.current;\n        mousePosRef.current = newMousePos;\n\n        const mouseDiff = scalePoint(\n          diffPoints(mousePosRef.current, lastMousePosRef.current),\n          canvasViewState.scale\n        );\n        const newCanvasViewState = {\n          scale: canvasViewState.scale,\n          offset: addPoints(lastCanvasViewState.current.offset, mouseDiff),\n        };\n        setCanvasViewState(newCanvasViewState);\n        lastCanvasViewState.current = newCanvasViewState;\n      }\n    },\n    [context, canvasViewState.scale, setCanvasViewState]\n  );\n\n  const mouseUp = useCallback(() => {\n    document.removeEventListener(\"mousemove\", mouseMove);\n    document.removeEventListener(\"mouseup\", mouseUp);\n  }, [mouseMove]);\n\n  const startPan = useCallback(\n    (event: React.MouseEvent | MouseEvent) => {\n      if (context) {\n        document.addEventListener(\"mousemove\", mouseMove);\n        document.addEventListener(\"mouseup\", mouseUp);\n        mousePosRef.current = calculateMousePositionOnElement(\n          event,\n          context.canvas\n        );\n      }\n    },\n    [context, mouseMove, mouseUp]\n  );\n\n  // add event listener on canvas for zoom\n  useLayoutEffect(() => {\n    function handleWheel(event: WheelEvent) {\n      event.preventDefault();\n      if (context) {\n        // update mouse position\n        const newMousePos = calculateMousePositionOnElement(\n          event,\n          context.canvas\n        );\n        lastMousePosRef.current = mousePosRef.current;\n        mousePosRef.current = newMousePos;\n\n        // calculate new scale/zoom\n        const zoomDelta = event.deltaY / zoomSensitivity;\n        const zoom =\n          1 -\n          (Math.abs(zoomDelta) > maxZoomDelta\n            ? (zoomDelta / Math.abs(zoomDelta)) * maxZoomDelta\n            : zoomDelta);\n        const newScale = canvasViewState.scale * zoom;\n        if (newScale > maxZoom || newScale < minZoom) {\n          return;\n        }\n\n        // offset the canvas such that the point under the mouse doesn't move\n        const lastMouse = scalePoint(\n          mousePosRef.current,\n          canvasViewState.scale\n        );\n        const newMouse = scalePoint(mousePosRef.current, newScale);\n        const mouseOffset = diffPoints(lastMouse, newMouse);\n\n        const newCanvasViewState = {\n          offset: diffPoints(lastCanvasViewState.current.offset, mouseOffset),\n          scale: newScale,\n        };\n        setCanvasViewState(newCanvasViewState);\n        lastCanvasViewState.current = newCanvasViewState;\n      }\n    }\n\n    const canvasElem = canvasRef.current;\n    if (canvasElem) {\n      lastCanvasViewState.current = canvasViewState;\n      canvasElem.addEventListener(\"wheel\", handleWheel);\n      return () => canvasElem.removeEventListener(\"wheel\", handleWheel);\n    }\n  }, [canvasRef, canvasViewState, context, setCanvasViewState]);\n\n  return [context, setContext, startPan];\n}\n","import * as React from \"react\";\nimport styled from \"styled-components/macro\";\nimport { ORIGIN } from \"../../utils/pointUtils\";\nimport { CanvasState, CanvasViewState } from \"./Canvas\";\n\nconst StyledButtons = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst StyledButton = styled.button`\n  margin: 0.2em;\n`;\n\ntype CanvasControlsProps = {\n  setCanvasViewState: (canvasViewState: CanvasViewState) => void;\n  canvasState: CanvasState;\n  savedCanvasState: CanvasViewState;\n  setSavedCanvasState: (newSavedCanvasState: CanvasViewState) => void;\n};\n\nexport default function CanvasControls(\n  props: CanvasControlsProps\n): React.ReactElement {\n  return (\n    <StyledButtons>\n      <StyledButton\n        onClick={() =>\n          props.canvasState.context &&\n          props.setCanvasViewState({ offset: ORIGIN, scale: 1 })\n        }\n      >\n        Reset View\n      </StyledButton>\n      <StyledButton\n        onClick={() =>\n          props.canvasState.context &&\n          props.setCanvasViewState({\n            offset: props.savedCanvasState.offset,\n            scale: props.savedCanvasState.scale,\n          })\n        }\n      >\n        Reset View to Saved\n      </StyledButton>\n      <StyledButton\n        onClick={() => {\n          props.setSavedCanvasState({\n            offset: props.canvasState.canvasViewState.offset,\n            scale: props.canvasState.canvasViewState.scale,\n          });\n        }}\n      >\n        Save View\n      </StyledButton>\n    </StyledButtons>\n  );\n}\n","import * as React from \"react\";\nimport { ModalState } from \"../../App\";\nimport styled from \"styled-components/macro\";\n\nconst StyledModalControls = styled.div`\n  position: absolute;\n  right: 10px;\n  top: 10px;\n`;\n\nconst StyledModalControlButton = styled.button`\n  margin-left: 1em;\n`;\n\ntype ModalControlsProps = {\n  setModalState: React.Dispatch<React.SetStateAction<ModalState>>;\n};\n\nexport default function ModalControls(\n  props: ModalControlsProps\n): React.ReactElement {\n  const { setModalState } = props;\n\n  return (\n    <StyledModalControls>\n      <StyledModalControlButton\n        onClick={() => setModalState({ visible: true, type: \"theory\" })}\n      >\n        Theory\n      </StyledModalControlButton>\n      <StyledModalControlButton\n        onClick={() => setModalState({ visible: true, type: \"tutorial\" })}\n      >\n        Tutorial\n      </StyledModalControlButton>\n      <StyledModalControlButton\n        onClick={() => setModalState({ visible: true, type: \"about\" })}\n      >\n        About\n      </StyledModalControlButton>\n    </StyledModalControls>\n  );\n}\n","import * as React from \"react\";\nimport { useLayoutEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport usePanZoomCanvas from \"./hooks/usePanZoomCanvas\";\nimport { Point } from \"../../utils/pointUtils\";\nimport CanvasControls from \"./CanvasControls\";\nimport useOnClickCanvas from \"./hooks/useOnClickCanvas\";\nimport { ModalState } from \"../../App\";\nimport ModalControls from \"./ModalControls\";\n\nconst StyledCanvasWrapper = styled.div`\n  display: block;\n  max-height: 100%;\n  position: relative;\n`;\n\nconst StyledCanvas = styled.canvas<{ cssWidth: number; cssHeight: number }>`\n  width: ${({ cssWidth }) => `${cssWidth}px`};\n  height: ${({ cssHeight }) => `${cssHeight}px`};\n`;\n\nexport type CanvasViewState = {\n  offset: Point;\n  scale: number;\n};\n\nexport type CanvasState = {\n  context: CanvasRenderingContext2D | null;\n  canvasViewState: CanvasViewState;\n  canvasWidth: number;\n  canvasHeight: number;\n};\n\nexport type CanvasProps = {\n  canvasWidth: number;\n  canvasHeight: number;\n  devicePixelRatio: number;\n  draw: (context: CanvasRenderingContext2D) => void;\n  onMouseDown: (\n    event: React.MouseEvent | MouseEvent,\n    canvasState: CanvasState,\n    defaultBehavior: (event: React.MouseEvent | MouseEvent) => void\n  ) => void;\n  handleDoubleClick: (\n    event: React.MouseEvent,\n    canvasState: CanvasState\n  ) => void;\n  canvasViewState: CanvasViewState;\n  setCanvasViewState: (newCanvasState: CanvasViewState) => void;\n  savedCanvasViewState: CanvasViewState;\n  setSavedCanvasViewState: (newSavedCanvasState: CanvasViewState) => void;\n  setKeyboardActive: React.Dispatch<React.SetStateAction<boolean>>;\n  setModalState: React.Dispatch<React.SetStateAction<ModalState>>;\n};\n\nexport default function Canvas(props: CanvasProps): React.ReactElement {\n  const {\n    canvasWidth,\n    canvasHeight,\n    devicePixelRatio,\n    draw,\n    onMouseDown,\n    handleDoubleClick,\n    canvasViewState,\n    setCanvasViewState,\n    savedCanvasViewState,\n    setSavedCanvasViewState,\n    setKeyboardActive,\n    setModalState,\n  } = props;\n\n  // hooks\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  useOnClickCanvas(canvasRef, setKeyboardActive);\n  const [context, setContext, startPan] = usePanZoomCanvas(\n    canvasRef,\n    canvasViewState,\n    setCanvasViewState\n  );\n\n  // setup canvas and set context\n  useLayoutEffect(() => {\n    if (canvasRef.current) {\n      // get new drawing context\n      const renderCtx = canvasRef.current.getContext(\"2d\");\n      setContext(renderCtx);\n    }\n  }, [setContext]);\n\n  // draw\n  useLayoutEffect(() => {\n    if (context) {\n      // clear canvas\n      context.canvas.width = canvasWidth * devicePixelRatio;\n      context.canvas.height = canvasHeight * devicePixelRatio;\n\n      context.scale(\n        canvasViewState.scale * devicePixelRatio,\n        canvasViewState.scale * devicePixelRatio\n      );\n      context.translate(canvasViewState.offset.x, canvasViewState.offset.y);\n\n      draw(context);\n    }\n  }, [\n    canvasHeight,\n    canvasWidth,\n    context,\n    devicePixelRatio,\n    draw,\n    canvasViewState.offset.x,\n    canvasViewState.offset.y,\n    canvasViewState.scale,\n  ]);\n\n  return (\n    <StyledCanvasWrapper>\n      <ModalControls setModalState={setModalState} />\n      <CanvasControls\n        setCanvasViewState={setCanvasViewState}\n        canvasState={{\n          context,\n          canvasViewState,\n          canvasWidth,\n          canvasHeight,\n        }}\n        savedCanvasState={savedCanvasViewState}\n        setSavedCanvasState={setSavedCanvasViewState}\n      />\n      <StyledCanvas\n        ref={canvasRef}\n        width={canvasWidth * devicePixelRatio}\n        height={canvasHeight * devicePixelRatio}\n        cssWidth={canvasWidth}\n        cssHeight={canvasHeight}\n        onMouseDown={(event: React.MouseEvent | MouseEvent) =>\n          onMouseDown(\n            event,\n            { context, canvasViewState, canvasWidth, canvasHeight },\n            () => startPan(event)\n          )\n        }\n        onDoubleClick={(event: React.MouseEvent) =>\n          handleDoubleClick(event, {\n            context,\n            canvasViewState,\n            canvasWidth,\n            canvasHeight,\n          })\n        }\n      />\n    </StyledCanvasWrapper>\n  );\n}\n","import * as React from \"react\";\nimport { useEffect } from \"react\";\n\nexport default function useOnClickCanvas(\n  ref: React.RefObject<HTMLCanvasElement>,\n  onClickCanvas: React.Dispatch<React.SetStateAction<boolean>>\n): void {\n  useEffect(() => {\n    const handleClickOutside = (event: React.MouseEvent | MouseEvent) => {\n      const keyBoardActive =\n        !!ref.current && ref.current.contains(event.target as Node);\n      onClickCanvas(keyBoardActive);\n    };\n\n    // Bind the event listener\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [ref, onClickCanvas]);\n}\n","import { useCallback } from \"react\";\nimport {\n  determineColor,\n  determineRadius,\n  drawConnection,\n  drawNode,\n} from \"../components/Canvas/canvasUtils\";\nimport { AppConnection, AppNode } from \"../App\";\nimport { CanvasState } from \"../components/Canvas/Canvas\";\n\nexport default function useDraw(\n  appNodes: AppNode[],\n  appConnections: AppConnection[]\n): [\n  (context: CanvasRenderingContext2D) => void,\n  (canvasState: CanvasState) => void\n] {\n  const draw = useCallback(\n    (context: CanvasRenderingContext2D) => {\n      appNodes.forEach((node) => {\n        const nodeRadius = determineRadius(\n          node.capacitanceJPerDegK,\n          appNodes.map((node) => node.capacitanceJPerDegK)\n        );\n        const nodeColor = determineColor(\n          node.temperatureDegC,\n          appNodes.map((node) => node.temperatureDegC)\n        );\n        drawNode(\n          context,\n          node.name,\n          node.center,\n          nodeRadius,\n          nodeColor,\n          node.isActive,\n          node.isBoundary,\n          node.textDirection\n        );\n      });\n\n      appConnections.map((conn) => {\n        const { firstNode, secondNode, kind } = conn;\n        const firstNodeAppNode = appNodes.find(\n          (node) => node.id === firstNode.id\n        );\n        const secondNodeAppNode = appNodes.find(\n          (node) => node.id === secondNode.id\n        );\n        if (firstNodeAppNode && secondNodeAppNode) {\n          const firstNodeRadius = determineRadius(\n            firstNodeAppNode.capacitanceJPerDegK,\n            appNodes.map((node) => node.capacitanceJPerDegK)\n          );\n          const secondNodeRadius = determineRadius(\n            secondNodeAppNode.capacitanceJPerDegK,\n            appNodes.map((node) => node.capacitanceJPerDegK)\n          );\n          drawConnection(\n            context,\n            firstNodeAppNode.center,\n            firstNodeRadius,\n            secondNodeAppNode.center,\n            secondNodeRadius,\n            kind\n          );\n        }\n      });\n    },\n    [appConnections, appNodes]\n  );\n\n  const clearAndRedraw = useCallback(\n    (canvasState: CanvasState) => {\n      if (canvasState.context) {\n        canvasState.context.clearRect(\n          -canvasState.canvasViewState.offset.x,\n          -canvasState.canvasViewState.offset.y,\n          canvasState.canvasWidth / canvasState.canvasViewState.scale,\n          canvasState.canvasHeight / canvasState.canvasViewState.scale\n        );\n        draw(canvasState.context);\n      }\n    },\n    [draw]\n  );\n\n  return [draw, clearAndRedraw];\n}\n","import React, { useCallback } from \"react\";\nimport { CanvasState } from \"../components/Canvas/Canvas\";\nimport {\n  determineRadius,\n  drawArrowWithoutHead,\n  intersectsCircle,\n  mouseToNodeCoords,\n} from \"../components/Canvas/canvasUtils\";\nimport { AppConnection, AppNode } from \"../App\";\nimport { getNewConnection } from \"../utils/nodeConnectionUtils\";\n\nexport default function useAddConnection(\n  appNodes: AppNode[],\n  appConnections: AppConnection[],\n  addConnection: (newConnection: AppConnection) => void,\n  clearAndRedraw: (canvasState: CanvasState) => void\n): (\n  event: React.MouseEvent | MouseEvent,\n  clickedNode: AppNode,\n  canvasState: CanvasState\n) => void {\n  const drawConnectionBeingMade = useCallback(\n    (\n      event: React.MouseEvent | MouseEvent,\n      clickedNode: AppNode,\n      canvasState: CanvasState\n    ) => {\n      if (canvasState.context) {\n        const nodeCoordsOfMouse = mouseToNodeCoords(event, canvasState);\n        clearAndRedraw(canvasState);\n        drawArrowWithoutHead(\n          canvasState.context,\n          clickedNode.center,\n          nodeCoordsOfMouse,\n          \"grey\"\n        );\n      }\n    },\n    [clearAndRedraw]\n  );\n\n  return useCallback(\n    (\n      event: React.MouseEvent | MouseEvent,\n      clickedNode: AppNode,\n      canvasState: CanvasState\n    ) => {\n      const drawConnWrapper = (event: React.MouseEvent | MouseEvent) => {\n        drawConnectionBeingMade(event, clickedNode, canvasState);\n      };\n\n      const mouseUp = (event: React.MouseEvent | MouseEvent) => {\n        document.removeEventListener(\"mousemove\", drawConnWrapper);\n        document.removeEventListener(\"mouseup\", mouseUp);\n\n        // if arrow released on a node, make new connection\n        const nodeCoordsOfMouse = mouseToNodeCoords(event, canvasState);\n        const mouseUpOnNode = appNodes.find((node) => {\n          const nodeRadius = determineRadius(\n            node.capacitanceJPerDegK,\n            appNodes.map((node) => node.capacitanceJPerDegK)\n          );\n          return (\n            intersectsCircle(nodeCoordsOfMouse, node.center, nodeRadius) &&\n            node.id !== clickedNode.id\n          );\n        });\n\n        if (mouseUpOnNode) {\n          const newConnection = getNewConnection(\n            clickedNode,\n            mouseUpOnNode,\n            appConnections\n          );\n          if (!!newConnection) {\n            addConnection(newConnection);\n          } else {\n            clearAndRedraw(canvasState);\n          }\n        } else {\n          clearAndRedraw(canvasState);\n        }\n      };\n      document.addEventListener(\"mousemove\", drawConnWrapper);\n      document.addEventListener(\"mouseup\", mouseUp);\n    },\n    [\n      addConnection,\n      appConnections,\n      appNodes,\n      clearAndRedraw,\n      drawConnectionBeingMade,\n    ]\n  );\n}\n","import React, { useCallback, useRef } from \"react\";\nimport { CanvasState } from \"../components/Canvas/Canvas\";\nimport { mouseToNodeCoords } from \"../components/Canvas/canvasUtils\";\nimport { AppNode } from \"../App\";\nimport { diffPoints } from \"../utils/pointUtils\";\nimport config from \"../config\";\n\nfunction getNewAppNodes(\n  clickedMouseEvent: React.MouseEvent | MouseEvent,\n  currentMouseEvent: React.MouseEvent | MouseEvent,\n  canvasState: CanvasState,\n  clickedNode: AppNode,\n  multiSelectKeyPressed: boolean,\n  activeNodes: AppNode[]\n): AppNode[] {\n  const offsetMouseToCenter = diffPoints(\n    mouseToNodeCoords(clickedMouseEvent, canvasState),\n    clickedNode.center\n  );\n\n  const newClickedCenter = diffPoints(\n    mouseToNodeCoords(currentMouseEvent, canvasState),\n    offsetMouseToCenter\n  );\n\n  const newClickedNode = {\n    ...clickedNode,\n    isActive: true,\n    center: newClickedCenter,\n  };\n\n  const newActiveNodes =\n    clickedNode.isActive || multiSelectKeyPressed\n      ? activeNodes.map((node) => {\n          const distanceFromClickedCenter = diffPoints(\n            clickedNode.center,\n            node.center\n          );\n          return {\n            ...node,\n            center: diffPoints(newClickedCenter, distanceFromClickedCenter),\n          };\n        })\n      : [];\n\n  return [newClickedNode, ...newActiveNodes];\n}\n\nexport default function useMoveNode(\n  updateNodes: (nodesToUpdate: AppNode[], clearActiveNodes?: boolean) => void\n): (\n  event: React.MouseEvent | MouseEvent,\n  clickedNode: AppNode,\n  activeNodes: AppNode[],\n  canvasState: CanvasState\n) => void {\n  const movedRef = useRef<boolean>(false);\n\n  return useCallback(\n    (\n      mouseDownEvent: React.MouseEvent | MouseEvent,\n      clickedNode: AppNode,\n      activeNodes: AppNode[],\n      canvasState: CanvasState\n    ) => {\n      const multiSelectKeyPressed = config.multiSelectKeys.some(\n        (k) => mouseDownEvent[k]\n      );\n      const moveNode = (currentMouseEvent: React.MouseEvent | MouseEvent) => {\n        if (canvasState.context) {\n          movedRef.current = true;\n          const newNodes = getNewAppNodes(\n            mouseDownEvent,\n            currentMouseEvent,\n            canvasState,\n            clickedNode,\n            multiSelectKeyPressed,\n            activeNodes\n          );\n          updateNodes(\n            newNodes,\n            !config.multiSelectKeys.some((k) => currentMouseEvent[k])\n          );\n        }\n      };\n      const mouseUp = (mouseUpEvent: React.MouseEvent | MouseEvent) => {\n        document.removeEventListener(\"mousemove\", moveNode);\n        document.removeEventListener(\"mouseup\", mouseUp);\n        const newNodes = getNewAppNodes(\n          mouseDownEvent,\n          mouseUpEvent,\n          canvasState,\n          clickedNode,\n          multiSelectKeyPressed,\n          activeNodes\n        );\n        updateNodes(newNodes, !multiSelectKeyPressed);\n        movedRef.current = false;\n      };\n      document.addEventListener(\"mousemove\", moveNode);\n      document.addEventListener(\"mouseup\", mouseUp);\n    },\n    [updateNodes]\n  );\n}\n","import React, { useCallback } from \"react\";\nimport { CanvasState } from \"../components/Canvas/Canvas\";\nimport {\n  drawClearBox,\n  isInsideBox,\n  mouseToNodeCoords,\n} from \"../components/Canvas/canvasUtils\";\nimport { AppNode } from \"../App\";\n\nexport default function useMultiSelect(\n  appNodes: AppNode[],\n  setActiveNodes: (activeNodeIds: string[]) => void,\n  clearAndRedraw: (canvasState: CanvasState) => void\n): (event: React.MouseEvent | MouseEvent, canvasState: CanvasState) => void {\n  return useCallback(\n    (event: React.MouseEvent | MouseEvent, canvasState: CanvasState) => {\n      const boxStart = mouseToNodeCoords(event, canvasState);\n      const drawBox = (event: React.MouseEvent | MouseEvent) => {\n        if (canvasState.context) {\n          clearAndRedraw(canvasState);\n          drawClearBox(\n            canvasState.context,\n            boxStart,\n            mouseToNodeCoords(event, canvasState),\n            \"grey\"\n          );\n        }\n      };\n      const mouseUp = (event: React.MouseEvent | MouseEvent) => {\n        document.removeEventListener(\"mousemove\", drawBox);\n        document.removeEventListener(\"mouseup\", mouseUp);\n\n        const boxEnd = mouseToNodeCoords(event, canvasState);\n        const activeNodeIds = appNodes\n          .filter(\n            (node) =>\n              isInsideBox(boxStart, boxEnd, node.center) || node.isActive\n          )\n          .map((node) => node.id);\n        setActiveNodes(activeNodeIds);\n      };\n      document.addEventListener(\"mousemove\", drawBox);\n      document.addEventListener(\"mouseup\", mouseUp);\n    },\n    [appNodes, clearAndRedraw, setActiveNodes]\n  );\n}\n","import * as React from \"react\";\nimport { useCallback } from \"react\";\nimport {\n  determineRadius,\n  intersectsCircle,\n  mouseToNodeCoords,\n} from \"../components/Canvas/canvasUtils\";\nimport { AppConnection, AppNode } from \"../App\";\nimport { CanvasState } from \"../components/Canvas/Canvas\";\nimport useAddConnection from \"./useAddConnection\";\nimport useMoveNode from \"./useMoveNode\";\nimport useMultiSelect from \"./useMultiSelect\";\nimport config from \"../config\";\n\nexport default function useOnMouseDown(\n  appNodes: AppNode[],\n  appConnections: AppConnection[],\n  addConnection: (newConnection: AppConnection) => void,\n  updateNodes: (nodesToUpdate: AppNode[], clearActiveNodes?: boolean) => void,\n  setActiveNodes: (activeNodeIds: string[]) => void,\n  clearActiveNodes: () => void,\n  clearAndRedraw: (canvasState: CanvasState) => void\n): (\n  event: React.MouseEvent | MouseEvent,\n  canvasState: CanvasState,\n  defaultBehavior: (event: React.MouseEvent | MouseEvent) => void\n) => void {\n  const makeNewConnection = useAddConnection(\n    appNodes,\n    appConnections,\n    addConnection,\n    clearAndRedraw\n  );\n  const moveNode = useMoveNode(updateNodes);\n  const multiSelect = useMultiSelect(appNodes, setActiveNodes, clearAndRedraw);\n\n  return useCallback(\n    (\n      mouseDownEvent: React.MouseEvent | MouseEvent,\n      canvasState: CanvasState,\n      defaultBehavior: (event: React.MouseEvent | MouseEvent) => void\n    ) => {\n      const nodeCoordsOfMouse = mouseToNodeCoords(mouseDownEvent, canvasState);\n\n      const activeNodes = appNodes.filter((node) => node.isActive);\n      const activeNodeIds = activeNodes.map((node) => node.id);\n\n      const clickedNode = appNodes.find((node) => {\n        const nodeRadius = determineRadius(\n          node.capacitanceJPerDegK,\n          appNodes.map((node) => node.capacitanceJPerDegK)\n        );\n        return intersectsCircle(nodeCoordsOfMouse, node.center, nodeRadius);\n      });\n\n      if (clickedNode) {\n        if (mouseDownEvent.altKey) {\n          makeNewConnection(mouseDownEvent, clickedNode, canvasState);\n        } else if (\n          config.multiSelectKeys.some((k) => mouseDownEvent[k]) &&\n          activeNodeIds.includes(clickedNode.id)\n        ) {\n          setActiveNodes(activeNodeIds.filter((id) => id !== clickedNode.id));\n        } else {\n          moveNode(mouseDownEvent, clickedNode, activeNodes, canvasState);\n        }\n      } else {\n        if (config.multiSelectKeys.some((k) => mouseDownEvent[k])) {\n          multiSelect(mouseDownEvent, canvasState);\n        } else {\n          // only clear active nodes if click with no pan\n          const onMouseUp = (mouseUpEvent: React.MouseEvent | MouseEvent) => {\n            if (\n              mouseUpEvent.clientX === mouseDownEvent.clientX &&\n              mouseUpEvent.clientY === mouseDownEvent.clientY\n            ) {\n              clearActiveNodes();\n            }\n            document.removeEventListener(\"mouseup\", onMouseUp);\n          };\n          document.addEventListener(\"mouseup\", onMouseUp);\n          defaultBehavior(mouseDownEvent);\n        }\n      }\n    },\n    [\n      appNodes,\n      clearActiveNodes,\n      moveNode,\n      multiSelect,\n      makeNewConnection,\n      setActiveNodes,\n    ]\n  );\n}\n","import * as React from \"react\";\nimport { useRef } from \"react\";\nimport { diffPoints, Point } from \"../utils/pointUtils\";\n\nexport default function useClickAndDragElement(params: {\n  onDragX?: (deltaXPx: number) => void;\n  onDragY?: (deltaYPx: number) => void;\n  constrainX?: (newYPx: number) => number;\n  constrainY?: (newYPx: number) => number;\n}): (mouseDownEvent: React.MouseEvent | MouseEvent) => void {\n  const lastMousePos = useRef<Point | undefined>(undefined);\n\n  const { onDragX, onDragY, constrainX, constrainY } = params;\n\n  const onMouseUp = () => {\n    document.removeEventListener(\"mousemove\", onMouseMove);\n    document.removeEventListener(\"mouseup\", onMouseUp);\n  };\n\n  const onMouseMove = (mouseMoveEvent: React.MouseEvent | MouseEvent) => {\n    if (lastMousePos.current) {\n      const currentMousePos = {\n        x: mouseMoveEvent.pageX,\n        y: mouseMoveEvent.pageY,\n      };\n      const diff = diffPoints(currentMousePos, lastMousePos.current);\n      onDragX && onDragX(diff.x);\n      onDragY && onDragY(diff.y);\n      lastMousePos.current = {\n        x: constrainX ? constrainX(currentMousePos.x) : currentMousePos.x,\n        y: constrainY ? constrainY(currentMousePos.y) : currentMousePos.y,\n      };\n    }\n  };\n\n  return (mouseDownEvent: React.MouseEvent | MouseEvent) => {\n    document.addEventListener(\"mousemove\", onMouseMove);\n    document.addEventListener(\"mouseup\", onMouseUp);\n    lastMousePos.current = { x: mouseDownEvent.pageX, y: mouseDownEvent.pageY };\n  };\n}\n","import * as React from \"react\";\nimport { useCallback, useRef } from \"react\";\nimport useClickAndDragElement from \"./useClickAndDragElement\";\nimport { AppState } from \"../App\";\nimport config from \"../config\";\n\nfunction constrainPanelSize(newPanelSize: number): number {\n  return newPanelSize < config.minPanelFraction\n    ? config.minPanelFraction\n    : newPanelSize > 1 - config.minPanelFraction\n    ? 1 - config.minPanelFraction\n    : newPanelSize;\n}\n\nexport default function useResizablePanels(\n  setAppState: React.Dispatch<React.SetStateAction<AppState>>,\n  windowHeight: number,\n  windowWidth: number\n): [\n  React.MutableRefObject<null>,\n  (mouseDownEvent: MouseEvent | React.MouseEvent<Element, MouseEvent>) => void,\n  React.MutableRefObject<null>,\n  (mouseDownEvent: MouseEvent | React.MouseEvent<Element, MouseEvent>) => void,\n  React.MutableRefObject<null>,\n  (mouseDownEvent: MouseEvent | React.MouseEvent<Element, MouseEvent>) => void\n] {\n  const constrainX = useCallback(\n    (newX: number) => {\n      const minPx = windowWidth * config.minPanelFraction;\n      const maxPx = windowWidth * (1 - config.minPanelFraction);\n      if (newX < minPx) {\n        return minPx;\n      } else if (newX > maxPx) {\n        return maxPx;\n      } else {\n        return newX;\n      }\n    },\n    [windowWidth]\n  );\n\n  const constrainY = useCallback(\n    (newY: number) => {\n      const minPx = windowHeight * config.minPanelFraction;\n      const maxPx = windowHeight * (1 - config.minPanelFraction);\n      if (newY < minPx) {\n        return minPx;\n      } else if (newY > maxPx) {\n        return maxPx;\n      } else {\n        return newY;\n      }\n    },\n    [windowHeight]\n  );\n\n  const canvasPlotBorderRef = useRef(null);\n  const onDragYCanvasPlot = useCallback(\n    (deltaYPx: number) => {\n      setAppState((prevAppState) => ({\n        ...prevAppState,\n        panelSizes: {\n          ...prevAppState.panelSizes,\n          canvasHeightFraction: constrainPanelSize(\n            prevAppState.panelSizes.canvasHeightFraction +\n              deltaYPx / windowHeight\n          ),\n        },\n      }));\n    },\n    [setAppState, windowHeight]\n  );\n  const onMouseDownOnCanvasPlotBorder = useClickAndDragElement({\n    onDragY: onDragYCanvasPlot,\n    constrainY,\n  });\n\n  const leftRightBorderRef = useRef(null);\n  const onDragXLeftRight = useCallback(\n    (deltaXPx: number) => {\n      setAppState((prevAppState) => ({\n        ...prevAppState,\n        panelSizes: {\n          ...prevAppState.panelSizes,\n          editorWidthFraction: constrainPanelSize(\n            prevAppState.panelSizes.editorWidthFraction - deltaXPx / windowWidth\n          ),\n        },\n      }));\n    },\n    [setAppState, windowWidth]\n  );\n  const onMouseDownOnLeftRightBorder = useClickAndDragElement({\n    onDragX: onDragXLeftRight,\n    constrainX,\n  });\n\n  const tableControlsBorderRef = useRef(null);\n  const onDragYTableControls = useCallback(\n    (deltaYPx: number) => {\n      setAppState((prevAppState) => ({\n        ...prevAppState,\n        panelSizes: {\n          ...prevAppState.panelSizes,\n          tableHeightFraction: constrainPanelSize(\n            prevAppState.panelSizes.tableHeightFraction +\n              deltaYPx / windowHeight\n          ),\n        },\n      }));\n    },\n    [setAppState, windowHeight]\n  );\n  const onMouseDownOnTableControlsBorder = useClickAndDragElement({\n    onDragY: onDragYTableControls,\n    constrainY,\n  });\n\n  return [\n    canvasPlotBorderRef,\n    onMouseDownOnCanvasPlotBorder,\n    leftRightBorderRef,\n    onMouseDownOnLeftRightBorder,\n    tableControlsBorderRef,\n    onMouseDownOnTableControlsBorder,\n  ];\n}\n","import styled from \"styled-components/macro\";\n\nexport const StyledApp = styled.div<{ height: number; modalOpen: boolean }>`\n  display: flex;\n  height: ${(props) => props.height}px;\n  filter: ${(props) => (props.modalOpen ? \"blur(5px)\" : \"unset\")};\n  pointer-events: ${(props) => (props.modalOpen ? \"none\" : \"unset\")};\n  user-select: none;\n  -webkit-user-select: none; /* Chrome/Safari */\n  -moz-user-select: none; /* Firefox */\n  -ms-user-select: none; /* IE10+ */\n`;\n\nexport const StyledDraggableBorder = styled.div`\n  position: absolute;\n  z-index: 1;\n`;\n\nexport const StyledHorizontalBorder = styled(StyledDraggableBorder)<{\n  width: number;\n  y: number;\n  left: number;\n}>`\n  width: ${(props) => props.width * 100}%;\n  height: 10px;\n  top: ${(props) => props.y * 100}%;\n  transform: translate(0, -5px);\n  cursor: row-resize;\n  left: ${(props) => props.left * 100}%;\n`;\n\nexport const StyledVerticalBorder = styled(StyledDraggableBorder)<{\n  x: number;\n}>`\n  height: 100%;\n  width: 10px;\n  left: ${(props) => props.x * 100}%;\n  transform: translate(-5px, 0);\n  cursor: col-resize;\n`;\n\nexport const StyledWorkspace = styled.div<{ height: number; width: number }>`\n  height: ${(props) => props.height}px;\n  width: ${(props) => props.width}px;\n`;\n\nexport const StyledCanvas = styled.div<{ height: number }>`\n  width: 100%;\n  height: ${(props) => props.height}px;\n`;\n","import * as React from \"react\";\nimport { ModalState } from \"../../App\";\nimport styled from \"styled-components/macro\";\n\nconst StyledConfirmationModal = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 2em;\n  justify-content: center;\n  align-items: center;\n  line-height: 1.8em;\n`;\n\nconst StyledConfirmationText = styled.p`\n  margin: 0.8em;\n  font-size: 1.5em;\n  font-weight: bold;\n  max-width: 800px;\n  text-align: center;\n`;\n\nconst StyledConfirmationButtons = styled.div`\n  display: flex;\n`;\n\nconst StyledConfirmationButton = styled.button`\n  font-size: 1.5em;\n  margin-left: 1em;\n  margin-right: 1em;\n  min-width: 100px;\n`;\n\ntype ConfirmationModalProps = {\n  modalState: ModalState;\n  setModalState: React.Dispatch<React.SetStateAction<ModalState>>;\n};\n\nexport default function ConfirmationModal(\n  props: ConfirmationModalProps\n): React.ReactElement {\n  const { modalState, setModalState } = props;\n\n  return (\n    <StyledConfirmationModal>\n      {modalState.confirmText &&\n        modalState.confirmText.map((text) => (\n          <StyledConfirmationText key={text}>{text}</StyledConfirmationText>\n        ))}\n      <StyledConfirmationButtons>\n        <StyledConfirmationButton\n          onClick={() => setModalState((prev) => ({ ...prev, visible: false }))}\n        >\n          No\n        </StyledConfirmationButton>\n        <StyledConfirmationButton\n          onClick={() => {\n            modalState.onConfirm && modalState.onConfirm();\n            setModalState((prev) => ({ ...prev, visible: false }));\n          }}\n        >\n          Yes\n        </StyledConfirmationButton>\n      </StyledConfirmationButtons>\n    </StyledConfirmationModal>\n  );\n}\n","import * as React from \"react\";\nimport styled from \"styled-components/macro\";\nimport { MathComponent } from \"mathjax-react\";\n\nconst StyledTheoryModal = styled.div`\n  max-width: 1200px;\n  height: 100%;\n  overflow-y: auto;\n  padding: 3em;\n  border-left: 1px solid black;\n  border-right: 1px solid black;\n`;\n\nconst StyledTitle = styled.h1``;\n\nconst StyledText = styled.p``;\n\nconst StyledLink = styled.a``;\n\nconst StyledListItem = styled.li`\n  margin-bottom: 1em;\n`;\n\nexport default function TheoryModal(): React.ReactElement {\n  return (\n    <StyledTheoryModal>\n      <StyledTitle>How Does thermalmodel.com Work?</StyledTitle>\n\n      <StyledText>\n        The model used by thermalmodel.com is a linear{\" \"}\n        <StyledLink\n          href={\"https://en.wikipedia.org/wiki/State-space_representation\"}\n          target={\"_blank\"}\n        >\n          state space\n        </StyledLink>{\" \"}\n        model based off conservation of heat flow:{\" \"}\n      </StyledText>\n\n      <MathComponent\n        display={true}\n        tex={String.raw`\\sum{q_{in/out}} + \\sum{q_{generated/consumed}} = 0`}\n      />\n\n      <ul>\n        <StyledListItem>\n          <MathComponent display={false} tex={String.raw`\\sum{q_{in/out}}`} />{\" \"}\n          is the sum of all heat transfer in or out in Watts{\" \"}\n          <MathComponent display={false} tex={String.raw`[W]`} />\n        </StyledListItem>\n        <StyledListItem>\n          <MathComponent\n            display={false}\n            tex={String.raw`\\sum{q_{generated/consumed}}`}\n          />{\" \"}\n          is the sum of all heat generated or consumed, in Watts{\" \"}\n          <MathComponent display={false} tex={String.raw`[W]`} />\n        </StyledListItem>\n      </ul>\n\n      <StyledText>\n        The class of model is referred to as a{\" \"}\n        <StyledLink\n          href={\n            \"https://en.wikipedia.org/wiki/Lumped-element_model#Thermal_systems\"\n          }\n          target={\"_blank\"}\n        >\n          Lumped-Element model\n        </StyledLink>\n        , which produces accurate results when each &quot;lump&quot;, or in the\n        terminology of this tool, &quot;node&quot;, can be assumed to have\n        uniform temperature. A node can be assumed to be uniform temperature\n        when the diffusion of heat energy within it is much greater than the\n        transfer of heat into or out of it. This is quantified by a small{\" \"}\n        <StyledLink\n          href={\"https://en.wikipedia.org/wiki/Biot_number\"}\n          target={\"_blank\"}\n        >\n          Biot number\n        </StyledLink>\n        .\n      </StyledText>\n\n      <StyledText>\n        What follows is the definition and manipulation of fundamental heat\n        transfer equations into the numerical form thermalmodel.com uses to\n        calculate node temperatures when it runs a model.\n      </StyledText>\n\n      <StyledText>\n        <StyledLink\n          href={\n            \"https://en.wikipedia.org/wiki/Thermal_conduction#Fourier's_law\"\n          }\n          target={\"_blank\"}\n        >\n          Fourier&apos;s Law in 1 dimension\n        </StyledLink>{\" \"}\n        states:\n      </StyledText>\n\n      <MathComponent display={true} tex={String.raw`q =-c \\Delta T`} />\n\n      <ul>\n        <StyledListItem>\n          <MathComponent display={false} tex={String.raw`q`} /> is heat transfer\n          in Watts <MathComponent display={false} tex={String.raw`[W]`} />\n        </StyledListItem>\n        <StyledListItem>\n          <MathComponent display={false} tex={String.raw`c`} /> is{\" \"}\n          <StyledLink\n            href={\"https://en.wikipedia.org/wiki/Thermal_contact_conductance\"}\n            target={\"_blank\"}\n          >\n            Thermal Conductance\n          </StyledLink>{\" \"}\n          or{\" \"}\n          <StyledLink\n            href={\"https://en.wikipedia.org/wiki/Thermal_transmittance\"}\n            target={\"_blank\"}\n          >\n            Thermal Transmittance\n          </StyledLink>{\" \"}\n          in Watts per degree Kelvin{\" \"}\n          <MathComponent display={false} tex={String.raw`[\\frac{W}{K}]`} />\n        </StyledListItem>\n        <StyledListItem>\n          <MathComponent display={false} tex={String.raw`\\Delta T`} /> is the\n          temperature difference in degrees{\" \"}\n          <MathComponent display={false} tex={String.raw`[K]`} />\n        </StyledListItem>\n      </ul>\n\n      <StyledText>\n        The reciprocal of Thermal Conductance is{\" \"}\n        <StyledLink\n          href={\"https://en.wikipedia.org/wiki/Thermal_resistance\"}\n          target={\"_blank\"}\n        >\n          Thermal Resistance\n        </StyledLink>{\" \"}\n        , <MathComponent display={false} tex={String.raw`R = \\frac{1}{c}`} />,\n        measured in degrees Kelvin per Watt{\" \"}\n        <MathComponent display={false} tex={String.raw`[\\frac{K}{W}]`} />. For a\n        given object or material, this can be thought of as the temperature\n        difference required to get one Watt of heat energy to flow through it.\n        Materials with higher thermal resistance require more of a temperature\n        difference to achieve the same heat flow.\n      </StyledText>\n\n      <MathComponent display={true} tex={String.raw`q = -\\frac{\\Delta T}{R}`} />\n\n      <ul>\n        <StyledListItem>\n          <MathComponent display={false} tex={String.raw`q`} /> is heat transfer\n          in Watts <MathComponent display={false} tex={String.raw`[W]`} />\n        </StyledListItem>\n        <StyledListItem>\n          <MathComponent display={false} tex={String.raw`\\Delta T`} /> is the\n          temperature difference in degrees{\" \"}\n          <MathComponent display={false} tex={String.raw`[K]`} />\n        </StyledListItem>\n        <StyledListItem>\n          <MathComponent display={false} tex={String.raw`R`} /> is{\" \"}\n          <StyledLink\n            href={\"https://en.wikipedia.org/wiki/Thermal_resistance\"}\n            target={\"_blank\"}\n          >\n            Thermal Resistance\n          </StyledLink>{\" \"}\n          in degrees Kelvin per Watt{\" \"}\n          <MathComponent display={false} tex={String.raw`[\\frac{K}{W}]`} />\n        </StyledListItem>\n      </ul>\n\n      <StyledText>\n        The definition of{\" \"}\n        <StyledLink\n          href={\"https://en.wikipedia.org/wiki/Heat_capacity\"}\n          target={\"_blank\"}\n        >\n          Thermal Capacitance\n        </StyledLink>{\" \"}\n        (different than Thermal Conductance above) is the amount of heat energy\n        applied to an object to produce 1 degree of temperature change in it:\n      </StyledText>\n\n      <MathComponent\n        display={true}\n        tex={String.raw`C = \\lim_{\\Delta T \\to 0} \\frac{Q}{\\Delta T} = \\frac{dQ}{dT}`}\n      />\n\n      <ul>\n        <StyledListItem>\n          <MathComponent display={false} tex={String.raw`C`} /> is{\" \"}\n          <StyledLink\n            href={\"https://en.wikipedia.org/wiki/Heat_capacity\"}\n            target={\"_blank\"}\n          >\n            Thermal Capacitance\n          </StyledLink>{\" \"}\n          , or Heat Capacity, in Joules per degree Kelvin{\" \"}\n          <MathComponent display={false} tex={String.raw`[\\frac{J}{K}]`} />\n        </StyledListItem>\n        <StyledListItem>\n          <MathComponent display={false} tex={String.raw`Q`} /> is heat\n          transferred in Joules{\" \"}\n          <MathComponent display={false} tex={String.raw`[J]`} />\n        </StyledListItem>\n        <StyledListItem>\n          <MathComponent display={false} tex={String.raw`\\Delta T`} /> is the\n          temperature difference in degrees{\" \"}\n          <MathComponent display={false} tex={String.raw`[K]`} />\n        </StyledListItem>\n        <StyledListItem>\n          <MathComponent display={false} tex={String.raw`\\frac{dQ}{dT}`} /> is\n          the rate of change of heat energy with respect to temperature in\n          Joules per degree{\" \"}\n          <MathComponent display={false} tex={String.raw`[\\frac{J}{K}]`} />\n        </StyledListItem>\n      </ul>\n\n      <StyledText>\n        Rearranging and differentiating the equation above with respect to time,\n        we obtain the following:\n      </StyledText>\n\n      <MathComponent display={true} tex={String.raw`q = C \\frac{dT}{dt}`} />\n\n      <ul>\n        <StyledListItem>\n          <MathComponent display={false} tex={String.raw`q`} /> is heat transfer\n          in Watts (i.e. Joules per second){\" \"}\n          <MathComponent display={false} tex={String.raw`[W = \\frac{J}{s}]`} />\n        </StyledListItem>\n        <StyledListItem>\n          <MathComponent display={false} tex={String.raw`C`} /> is{\" \"}\n          <StyledLink\n            href={\"https://en.wikipedia.org/wiki/Heat_capacity\"}\n            target={\"_blank\"}\n          >\n            Thermal Capacitance\n          </StyledLink>{\" \"}\n          , or Heat Capacity, in Joules per degree Kelvin{\" \"}\n          <MathComponent display={false} tex={String.raw`[\\frac{J}{K}]`} />\n        </StyledListItem>\n        <StyledListItem>\n          <MathComponent display={false} tex={String.raw`\\frac{dT}{dt}`} /> is\n          the derivative of temperature with respect to time in degrees per\n          second{\" \"}\n          <MathComponent display={false} tex={String.raw`[\\frac{K}{s}]`} />\n        </StyledListItem>\n      </ul>\n\n      <StyledText>\n        Note we now have two equations for{\" \"}\n        <MathComponent display={false} tex={String.raw`q`} />, heat transfer in\n        Watts. Equating these, working out the signs, and adding in power\n        generated or consumed, we obtain the following:\n      </StyledText>\n\n      <MathComponent\n        display={true}\n        tex={String.raw`C \\frac{dT}{dt} = \\sum{\\frac{\\Delta T}{R}} - q_{generated/consumed}`}\n      />\n\n      <ul>\n        <StyledListItem>\n          <MathComponent display={false} tex={String.raw`C`} /> is{\" \"}\n          <StyledLink\n            href={\"https://en.wikipedia.org/wiki/Heat_capacity\"}\n            target={\"_blank\"}\n          >\n            Thermal Capacitance\n          </StyledLink>{\" \"}\n          , or Heat Capacity, in Joules per degree Kelvin{\" \"}\n          <MathComponent display={false} tex={String.raw`[\\frac{J}{K}]`} />\n        </StyledListItem>\n        <StyledListItem>\n          <MathComponent display={false} tex={String.raw`\\frac{dT}{dt}`} /> is\n          the derivative of temperature with respect to time in degrees per\n          second{\" \"}\n          <MathComponent display={false} tex={String.raw`[\\frac{K}{s}]`} />\n        </StyledListItem>\n        <StyledListItem>\n          <MathComponent display={false} tex={String.raw`\\Delta T`} /> is the\n          temperature difference in degrees{\" \"}\n          <MathComponent display={false} tex={String.raw`[K]`} />\n        </StyledListItem>\n        <StyledListItem>\n          <MathComponent display={false} tex={String.raw`R`} /> is{\" \"}\n          <StyledLink\n            href={\"https://en.wikipedia.org/wiki/Thermal_resistance\"}\n            target={\"_blank\"}\n          >\n            Thermal Resistance\n          </StyledLink>{\" \"}\n          in degrees Kelvin per Watt{\" \"}\n          <MathComponent display={false} tex={String.raw`[\\frac{K}{W}]`} />\n        </StyledListItem>\n        <StyledListItem>\n          <MathComponent\n            display={false}\n            tex={String.raw`q_{generated/consumed}`}\n          />{\" \"}\n          is the net heat generated or consumed, in Watts{\" \"}\n          <MathComponent display={false} tex={String.raw`[W]`} />\n        </StyledListItem>\n      </ul>\n\n      <StyledText>\n        This partial differential equation can be converted to a numerical\n        equation with reasonable results assuming the time step between discrete\n        states is small. In using thermalmodel.com, you&apos;ll notice that if\n        you increase the time step too much and rerun a model, unstable results\n        appear - at too high a time step size, errors compound at each step and\n        blow up the temperature differences to unreasonable numbers. If you see\n        instability, decrease the time step size and rerun your model.\n      </StyledText>\n\n      <StyledText>\n        Assuming small time steps, this equation holds for each node in the\n        model:\n      </StyledText>\n\n      <MathComponent\n        display={true}\n        tex={String.raw`\\Delta T_{node} = \\frac{\\Delta{t}}{C_{node}}(\\sum{\\frac{T_{other\\_node} - T_{node}}{R_{other\\_node \\leftrightarrow node}}} - q_{generated/consumed})`}\n      />\n\n      <ul>\n        <StyledListItem>\n          <MathComponent display={false} tex={String.raw`\\Delta{T}_{node}`} />{\" \"}\n          is the change in temperature of the node of interest at that time\n          step, in degrees{\" \"}\n          <MathComponent display={false} tex={String.raw`[K]`} />\n        </StyledListItem>\n        <StyledListItem>\n          <MathComponent display={false} tex={String.raw`\\Delta{t}`} /> is the\n          time step in seconds{\" \"}\n          <MathComponent display={false} tex={String.raw`[s]`} />\n        </StyledListItem>\n        <StyledListItem>\n          <MathComponent display={false} tex={String.raw`C_{node}`} /> is{\" \"}\n          <StyledLink\n            href={\"https://en.wikipedia.org/wiki/Heat_capacity\"}\n            target={\"_blank\"}\n          >\n            Thermal Capacitance\n          </StyledLink>{\" \"}\n          , or Heat Capacity, of the node of interest in Joules per degree\n          Kelvin{\" \"}\n          <MathComponent display={false} tex={String.raw`[\\frac{J}{K}]`} />\n        </StyledListItem>\n        <StyledListItem>\n          <MathComponent display={false} tex={String.raw`T_{other\\_node}`} /> is\n          the current temperature of a node that is thermally connected with the\n          node of interest in degrees{\" \"}\n          <MathComponent display={false} tex={String.raw`[K]`} />\n        </StyledListItem>\n        <StyledListItem>\n          <MathComponent display={false} tex={String.raw`T_{node}`} /> is the\n          current temperature the node of interest in degrees{\" \"}\n          <MathComponent display={false} tex={String.raw`[K]`} />\n        </StyledListItem>\n        <StyledListItem>\n          <MathComponent\n            display={false}\n            tex={String.raw`R_{other\\_node \\leftrightarrow node}`}\n          />{\" \"}\n          is the{\" \"}\n          <StyledLink\n            href={\"https://en.wikipedia.org/wiki/Thermal_resistance\"}\n            target={\"_blank\"}\n          >\n            Thermal Resistance\n          </StyledLink>{\" \"}\n          between the two thermally connected nodes in degrees Kelvin per Watt\n          <MathComponent display={false} tex={String.raw`[\\frac{K}{W}]`} /> if\n          conduction or convection, or degrees Kelvin to the fourth per Watt\n          <MathComponent display={false} tex={String.raw`[\\frac{K^4}{W}]`} /> if\n          radiation\n        </StyledListItem>\n        <StyledListItem>\n          <MathComponent\n            display={false}\n            tex={String.raw`q_{generated/consumed}`}\n          />{\" \"}\n          is the net heat generated or consumed by the node of interest, in\n          Watts <MathComponent display={false} tex={String.raw`[W]`} />\n        </StyledListItem>\n      </ul>\n\n      <StyledText>\n        Under the hood, thermalmodel.com solves the above equation for each node\n        at each timestep, resulting in a set of temperature values for each node\n        at each timestep over the duration of the model.\n      </StyledText>\n\n      <StyledText>\n        Fixed temperature, i.e. boundary condition nodes do not change\n        temperature over time. They influence nodes that are thermally connected\n        to them, but their calculated temperature difference at each time step\n        is discarded rather than added to their previous temperature.\n      </StyledText>\n\n      <StyledText>\n        Nodes can be thermally connected through Conduction, Convection, or\n        Radiation. The user should calculate thermal resistance differently\n        depending on the type of connection, as follows:\n      </StyledText>\n\n      <MathComponent\n        display={true}\n        tex={String.raw`R_{conduction} = \\frac{L}{kA} \\quad \\text{units:} \\Big{[}\\frac{K}{W}\\Big{]}`}\n      />\n\n      <ul>\n        <StyledListItem>\n          <MathComponent display={false} tex={String.raw`L`} /> is the\n          conduction length, in meters{\" \"}\n          <MathComponent display={false} tex={String.raw`[m]`} />\n        </StyledListItem>\n        <StyledListItem>\n          <MathComponent display={false} tex={String.raw`k`} /> is the{\" \"}\n          <StyledLink\n            href={\"https://en.wikipedia.org/wiki/Thermal_conductivity\"}\n            target={\"_blank\"}\n          >\n            Thermal Conductivity\n          </StyledLink>\n          , in Watts per meter per degrees Kelvin{\" \"}\n          <MathComponent display={false} tex={String.raw`[\\frac{W}{mK}]`} />\n        </StyledListItem>\n        <StyledListItem>\n          <MathComponent display={false} tex={String.raw`A`} /> is the\n          conduction area, in meters squared{\" \"}\n          <MathComponent display={false} tex={String.raw`[m^2]`} />\n        </StyledListItem>\n      </ul>\n\n      <MathComponent\n        display={true}\n        tex={String.raw`R_{convection} = \\frac{1}{hA} \\quad \\text{units:} \\Big{[}\\frac{K}{W}\\Big{]}`}\n      />\n\n      <ul>\n        <StyledListItem>\n          <MathComponent display={false} tex={String.raw`h`} /> is the{\" \"}\n          <StyledLink\n            href={\"https://en.wikipedia.org/wiki/Heat_transfer_coefficient\"}\n            target={\"_blank\"}\n          >\n            Convective Heat Transfer Coefficient\n          </StyledLink>\n          , in Watts per meters squared per degrees Kelvin{\" \"}\n          <MathComponent display={false} tex={String.raw`[\\frac{W}{m^2K}]`} />\n        </StyledListItem>\n        <StyledListItem>\n          <MathComponent display={false} tex={String.raw`A`} /> is the\n          convection area, in meters squared{\" \"}\n          <MathComponent display={false} tex={String.raw`[m^2]`} />\n        </StyledListItem>\n      </ul>\n\n      <MathComponent\n        display={true}\n        tex={String.raw`R_{radiation} = \\frac{1}{\\epsilon \\sigma A} \\quad \\text{units:} \\Big{[}\\frac{K^4}{W}\\Big{]}`}\n      />\n\n      <ul>\n        <StyledListItem>\n          <MathComponent display={false} tex={String.raw`\\epsilon`} /> is the{\" \"}\n          <StyledLink\n            href={\"https://en.wikipedia.org/wiki/Emissivity\"}\n            target={\"_blank\"}\n          >\n            Emissivity\n          </StyledLink>\n          , a unit-less quantity\n        </StyledListItem>\n        <StyledListItem>\n          <MathComponent display={false} tex={String.raw`\\sigma`} /> is the{\" \"}\n          <StyledLink\n            href={\n              \"https://en.wikipedia.org/wiki/Stefan%E2%80%93Boltzmann_constant\"\n            }\n            target={\"_blank\"}\n          >\n            Stefan-Boltzmann constant\n          </StyledLink>\n          ,{\" \"}\n          <MathComponent display={false} tex={String.raw`5.67 \\cdot 10^{−8}`} />{\" \"}\n          Watts per meters squared per degrees Kelvin to the fourth{\" \"}\n          <MathComponent display={false} tex={String.raw`[\\frac{W}{m^2K^4}]`} />\n        </StyledListItem>\n        <StyledListItem>\n          <MathComponent display={false} tex={String.raw`A`} /> is the radiation\n          area, in meters squared{\" \"}\n          <MathComponent display={false} tex={String.raw`[m^2]`} />\n        </StyledListItem>\n      </ul>\n\n      <StyledText>\n        In building your model, you&apos;re responsible for determining thermal\n        resistances between nodes, thermal capacitances of nodes, and power\n        generation or consumption in each node in your model. From there,\n        thermalmodel.com will do the rest.\n      </StyledText>\n\n      <StyledText>\n        The source code for the model can be seen{\" \"}\n        <StyledLink\n          href={\n            \"https://github.com/robinovitch61/thermalmodel.com/tree/main/packages/hotstuff-network\"\n          }\n          target={\"_blank\"}\n        >\n          here as a standalone Javascript package on npm\n        </StyledLink>\n        .\n      </StyledText>\n    </StyledTheoryModal>\n  );\n}\n","import * as React from \"react\";\nimport { useRef } from \"react\";\nimport { ModalState } from \"../../App\";\nimport styled from \"styled-components/macro\";\nimport useOnClickOutside from \"../../hooks/useOnClickOutside\";\nimport ConfirmationModal from \"./ConfirmationModal\";\nimport TheoryModal from \"./TheoryModal\";\n\nconst StyledModal = styled.div<{ visible: boolean }>`\n  font-size: 1.1em;\n  line-height: 1.4em;\n  position: absolute;\n  width: 80vw;\n  height: 90vh;\n  max-width: 1400px;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  margin: auto;\n  border: 3px solid black;\n  z-index: 10;\n  background: white;\n  display: ${(props) => (props.visible ? \"flex\" : \"none\")};\n  justify-content: center;\n  align-items: center;\n`;\n\nconst StyledExitButton = styled.button`\n  position: absolute;\n  right: 1em;\n  top: 1em;\n  font-size: 1.2em;\n`;\n\nfunction getModalContent(\n  modalState: ModalState,\n  setModalState: React.Dispatch<React.SetStateAction<ModalState>>\n): React.ReactElement {\n  const type = modalState.type;\n\n  if (type === \"confirm\") {\n    return (\n      <ConfirmationModal\n        modalState={modalState}\n        setModalState={setModalState}\n      />\n    );\n  } else if (type === \"theory\") {\n    return <TheoryModal />;\n  } else {\n    return <h1>Coming Soon</h1>;\n  }\n}\n\ntype ModalProps = {\n  modalState: ModalState;\n  setModalState: React.Dispatch<React.SetStateAction<ModalState>>;\n};\n\nexport default function Modal(props: ModalProps): React.ReactElement {\n  const { modalState, setModalState } = props;\n\n  const modalRef = useRef<HTMLDivElement>(null);\n  useOnClickOutside(modalRef, () =>\n    setModalState((prev) => ({ ...prev, visible: false }))\n  );\n\n  const modalContent = getModalContent(modalState, setModalState);\n\n  return (\n    <StyledModal ref={modalRef} visible={modalState.visible}>\n      <StyledExitButton\n        onClick={() =>\n          setModalState((prevState) => ({\n            ...prevState,\n            visible: false,\n          }))\n        }\n      >\n        X\n      </StyledExitButton>\n      {modalContent}\n    </StyledModal>\n  );\n}\n","import * as React from \"react\";\nimport { useEffect } from \"react\";\n\nexport default function useOnClickOutside(\n  ref: React.RefObject<HTMLDivElement>,\n  onClickOutside: () => void\n): void {\n  useEffect(() => {\n    const listener = (\n      event: React.MouseEvent | MouseEvent | React.TouchEvent | TouchEvent\n    ) => {\n      // Do nothing if clicking ref's element or descendent elements\n      if (!ref.current || ref.current.contains(event.target as Node | null)) {\n        return;\n      }\n      onClickOutside();\n    };\n    document.addEventListener(\"mousedown\", listener);\n    document.addEventListener(\"touchstart\", listener);\n    return () => {\n      document.removeEventListener(\"mousedown\", listener);\n      document.removeEventListener(\"touchstart\", listener);\n    };\n  }, [ref, onClickOutside]);\n}\n","import { HSConnection, HSNode, ModelOutput, run } from \"hotstuff-network\";\nimport React, { useCallback, useMemo, useState } from \"react\";\nimport { Point } from \"./utils/pointUtils\";\nimport Sidebar from \"./components/Sidebar/Sidebar\";\nimport Plot from \"./components/Plot/Plot\";\nimport config from \"./config\";\nimport useWindowSize from \"./components/Canvas/hooks/useWindowSize\";\nimport Canvas, { CanvasViewState } from \"./components/Canvas/Canvas\";\nimport useDraw from \"./hooks/useDraw\";\nimport useDoubleClick from \"./hooks/useDoubleClick\";\nimport useNodeConnectionUtils from \"./hooks/useNodeConnectionUtils\";\nimport useOnMouseDown from \"./hooks/useOnMouseDown\";\nimport useKeyDown from \"./hooks/useKeyDown\";\nimport { defaultAppState, defaultModalState } from \"./default\";\nimport useSessionStorageState from \"./hooks/useSessionStorageState\";\nimport { getCanvasCenter } from \"./components/Canvas/canvasUtils\";\nimport {\n  getNewAppNode,\n  getNewPossibleConnection,\n} from \"./utils/nodeConnectionUtils\";\nimport useAppStateModifiers from \"./hooks/useAppStateModifiers\";\nimport useResizablePanels from \"./hooks/useResizablePanels\";\nimport {\n  StyledApp,\n  StyledCanvas,\n  StyledHorizontalBorder,\n  StyledVerticalBorder,\n  StyledWorkspace,\n} from \"./style\";\nimport Modal from \"./components/Modal/Modal\";\n\nconst { plotMargin, tabHeightPx, plotHeightBufferPx } = config;\n\nexport type Direction = \"L\" | \"R\" | \"U\" | \"D\";\n\nexport type AppNode = HSNode & {\n  center: Point;\n  isActive: boolean;\n  textDirection: Direction;\n};\n\nexport type AppConnection = HSConnection & {\n  firstNodeId: string; // duplicated data here to make working with tables easier\n  secondNodeId: string; // duplicated data here to make working with tables easier\n};\n\nexport type Timing = {\n  timeStepS: number;\n  totalTimeS: number;\n};\n\nexport type PanelSizes = {\n  editorWidthFraction: number;\n  canvasHeightFraction: number;\n  tableHeightFraction: number;\n};\n\nexport type ModalType = \"theory\" | \"tutorial\" | \"about\" | \"confirm\";\n\nexport type ModalState = {\n  visible: boolean;\n  type: ModalType;\n  onConfirm?: () => void;\n  confirmText?: string[];\n};\n\nexport type AppState = {\n  output?: ModelOutput;\n  timing: Timing;\n  nodes: AppNode[];\n  connections: AppConnection[];\n  canvasViewState: CanvasViewState;\n  savedCanvasState: CanvasViewState;\n  panelSizes: PanelSizes;\n};\n\nexport default function App(): React.ReactElement {\n  const [appState, setAppState] = useSessionStorageState<AppState>(\n    defaultAppState,\n    \"thermalModelAppState\"\n  );\n\n  const [modalState, setModalState] = useState<ModalState>(defaultModalState);\n\n  const [\n    setAppNodes,\n    setAppConnections,\n    setCanvasViewState,\n    setSavedCanvasState,\n    setTiming,\n    setModelOutput,\n  ] = useAppStateModifiers(setAppState);\n\n  const [\n    addNode,\n    addConnection,\n    updateNodes,\n    deleteNodes,\n    updateConnections,\n    deleteConnections,\n    setActiveNodes,\n    clearActiveNodes,\n  ] = useNodeConnectionUtils(\n    appState.nodes,\n    setAppNodes,\n    appState.connections,\n    setAppConnections,\n    setModelOutput\n  );\n\n  const [keyboardActive, setKeyboardActive] = useState<boolean>(true);\n  useKeyDown(keyboardActive, appState.nodes, setAppNodes, deleteNodes);\n\n  const [draw, clearAndRedraw] = useDraw(appState.nodes, appState.connections);\n  const handleDoubleClick = useDoubleClick(\n    appState.nodes,\n    addNode,\n    updateNodes\n  );\n  const onMouseDown = useOnMouseDown(\n    appState.nodes,\n    appState.connections,\n    addConnection,\n    updateNodes,\n    setActiveNodes,\n    clearActiveNodes,\n    clearAndRedraw\n  );\n\n  const [size, ratio] = useWindowSize();\n  const [windowWidth, windowHeight] = size;\n\n  const [\n    canvasPlotBorderRef,\n    onMouseDownOnCanvasPlotBorder,\n    leftRightBorderRef,\n    onMouseDownOnLeftRightBorder,\n    tableControlsBorderRef,\n    onMouseDownOnTableControlsBorder,\n  ] = useResizablePanels(setAppState, windowHeight, windowWidth);\n\n  // width/heights\n  const workspaceWidth = windowWidth;\n  const workspaceHeight = windowHeight;\n  const canvasHeight = windowHeight * appState.panelSizes.canvasHeightFraction;\n  const canvasWidth =\n    windowWidth * (1 - appState.panelSizes.editorWidthFraction);\n  const plotHeight =\n    (1 - appState.panelSizes.canvasHeightFraction) * windowHeight -\n    tabHeightPx -\n    plotHeightBufferPx;\n  const plotWidth = canvasWidth;\n  const editorWidth = appState.panelSizes.editorWidthFraction * windowWidth;\n\n  const plot = useMemo(() => {\n    return (\n      <Plot\n        plotDimensions={{\n          height: plotHeight,\n          width: plotWidth,\n          margin: plotMargin,\n        }}\n        modelOutput={appState.output}\n      />\n    );\n  }, [appState.output, plotHeight, plotWidth]);\n\n  const addNodeInCenterOfCanvas = useCallback(() => {\n    addNode(\n      getNewAppNode(\n        appState.nodes,\n        getCanvasCenter(\n          canvasWidth,\n          canvasHeight,\n          appState.canvasViewState.offset,\n          appState.canvasViewState.scale\n        )\n      )\n    );\n  }, [\n    addNode,\n    appState.canvasViewState.offset,\n    appState.canvasViewState.scale,\n    appState.nodes,\n    canvasHeight,\n    canvasWidth,\n  ]);\n\n  const createNewLogicalConnection = useCallback(() => {\n    const newConnection = getNewPossibleConnection(\n      appState.nodes,\n      appState.connections\n    );\n    if (newConnection !== undefined) {\n      addConnection(newConnection);\n    }\n  }, [addConnection, appState.connections, appState.nodes]);\n\n  return (\n    <div>\n      <Modal modalState={modalState} setModalState={setModalState} />\n      <StyledApp height={windowHeight} modalOpen={modalState.visible}>\n        <StyledHorizontalBorder\n          ref={canvasPlotBorderRef}\n          onMouseDown={onMouseDownOnCanvasPlotBorder}\n          y={appState.panelSizes.canvasHeightFraction}\n          width={1 - appState.panelSizes.editorWidthFraction}\n          left={0}\n        />\n        <StyledVerticalBorder\n          ref={leftRightBorderRef}\n          onMouseDown={onMouseDownOnLeftRightBorder}\n          x={1 - appState.panelSizes.editorWidthFraction}\n        />\n        <StyledHorizontalBorder\n          ref={tableControlsBorderRef}\n          onMouseDown={onMouseDownOnTableControlsBorder}\n          y={appState.panelSizes.tableHeightFraction}\n          width={appState.panelSizes.editorWidthFraction}\n          left={1 - appState.panelSizes.editorWidthFraction}\n        />\n\n        <StyledWorkspace\n          height={workspaceHeight}\n          width={(1 - appState.panelSizes.editorWidthFraction) * workspaceWidth}\n        >\n          <StyledCanvas height={canvasHeight}>\n            <Canvas\n              canvasWidth={canvasWidth}\n              canvasHeight={canvasHeight}\n              devicePixelRatio={ratio}\n              draw={draw}\n              onMouseDown={onMouseDown}\n              handleDoubleClick={handleDoubleClick}\n              canvasViewState={appState.canvasViewState}\n              setCanvasViewState={setCanvasViewState}\n              savedCanvasViewState={appState.savedCanvasState}\n              setSavedCanvasViewState={setSavedCanvasState}\n              setKeyboardActive={setKeyboardActive}\n              setModalState={setModalState}\n            />\n          </StyledCanvas>\n          {plot}\n        </StyledWorkspace>\n        <Sidebar\n          appState={appState}\n          setAppState={setAppState}\n          setModalState={setModalState}\n          height={windowHeight}\n          width={editorWidth}\n          setTiming={setTiming}\n          onAddNode={addNodeInCenterOfCanvas}\n          onAddConnection={createNewLogicalConnection}\n          updateNodes={(nodes: AppNode[]) => {\n            updateNodes(nodes);\n            setModelOutput(undefined);\n          }}\n          deleteNodes={deleteNodes}\n          updateConnections={(conns: AppConnection[]) => {\n            updateConnections(conns);\n            setModelOutput(undefined);\n          }}\n          deleteConnections={deleteConnections}\n          onRunModel={() => {\n            const output = run({\n              nodes: appState.nodes,\n              connections: appState.connections,\n              timeStepS: appState.timing.timeStepS,\n              totalTimeS: appState.timing.totalTimeS,\n            });\n            if (output.errors?.length) {\n              output.errors.forEach((error) => console.error(error.message));\n            }\n            setModelOutput(output);\n          }}\n        />\n      </StyledApp>\n    </div>\n  );\n}\n","import * as React from \"react\";\n\nexport default function useSessionStorageState<T>(\n  defaultValue: T,\n  key: string\n): [T, React.Dispatch<React.SetStateAction<T>>] {\n  const [value, setValue] = React.useState<T>(() => {\n    const localState = window.sessionStorage.getItem(key);\n    if (localState === null || localState === undefined) {\n      return defaultValue;\n    } else {\n      return JSON.parse(localState) as T;\n    }\n  });\n\n  React.useEffect(() => {\n    window.sessionStorage.setItem(key, JSON.stringify(value));\n  }, [key, value]);\n  return [value, setValue];\n}\n","import * as React from \"react\";\nimport { useCallback } from \"react\";\nimport { CanvasViewState } from \"../components/Canvas/Canvas\";\nimport { ModelOutput } from \"hotstuff-network\";\nimport { AppConnection, AppNode, AppState, Timing } from \"../App\";\n\nexport default function useAppStateModifiers(\n  setAppState: React.Dispatch<React.SetStateAction<AppState>>\n): [\n  (newNodes: AppNode[]) => void,\n  (newConnections: AppConnection[]) => void,\n  (newCanvasState: CanvasViewState) => void,\n  (newCanvasState: CanvasViewState) => void,\n  (newTiming: Timing) => void,\n  (newModelOutput: ModelOutput | undefined) => void\n] {\n  const setAppNodes = useCallback(\n    (newNodes: AppNode[]) => {\n      setAppState((prevState) => ({\n        ...prevState,\n        nodes: newNodes,\n      }));\n    },\n    [setAppState]\n  );\n\n  const setAppConnections = useCallback(\n    (newConnections: AppConnection[]) => {\n      setAppState((prevState) => ({\n        ...prevState,\n        connections: newConnections,\n      }));\n    },\n    [setAppState]\n  );\n\n  const setCanvasViewState = useCallback(\n    (newCanvasState: CanvasViewState) => {\n      setAppState((prevState) => ({\n        ...prevState,\n        canvasViewState: newCanvasState,\n      }));\n    },\n    [setAppState]\n  );\n\n  const setSavedCanvasState = useCallback(\n    (newSavedCanvasState: CanvasViewState) => {\n      setAppState((prevState) => ({\n        ...prevState,\n        savedCanvasState: newSavedCanvasState,\n      }));\n    },\n    [setAppState]\n  );\n\n  const setTiming = useCallback(\n    (newTiming: Timing) => {\n      setAppState((prevState) => ({\n        ...prevState,\n        timing: newTiming,\n        output: undefined,\n      }));\n    },\n    [setAppState]\n  );\n\n  const setModelOutput = useCallback(\n    (newModelOutput: ModelOutput | undefined) => {\n      setAppState((prevState) => ({\n        ...prevState,\n        output: newModelOutput,\n      }));\n    },\n    [setAppState]\n  );\n\n  return [\n    setAppNodes,\n    setAppConnections,\n    setCanvasViewState,\n    setSavedCanvasState,\n    setTiming,\n    setModelOutput,\n  ];\n}\n","import { useCallback } from \"react\";\nimport { AppConnection, AppNode } from \"../App\";\nimport { ModelOutput } from \"hotstuff-network\";\n\nexport default function useNodeConnectionUtils(\n  appNodes: AppNode[],\n  setAppNodes: (newNodes: AppNode[]) => void,\n  appConnections: AppConnection[],\n  setAppConnections: (newConnections: AppConnection[]) => void,\n  setModelOutput: (newModelOutput: ModelOutput | undefined) => void\n): [\n  (node: AppNode) => void,\n  (connection: AppConnection) => void,\n  (nodesToUpdate: AppNode[], clearActiveNodes?: boolean) => void,\n  (nodeIds: string[]) => void,\n  (connsToUpdate: AppConnection[]) => void,\n  (connIds: string[]) => void,\n  (activeNodeIds: string[]) => void,\n  () => void\n] {\n  const addNode = useCallback(\n    (node: AppNode) => {\n      const newNodes = appNodes.map((node) => ({\n        ...node,\n        isActive: false,\n      }));\n      newNodes.push({ ...node, isActive: true });\n      setAppNodes(newNodes);\n      setModelOutput(undefined);\n    },\n    [appNodes, setAppNodes, setModelOutput]\n  );\n\n  const addConnection = useCallback(\n    (connection: AppConnection) => {\n      setAppConnections([...appConnections, connection]);\n      setModelOutput(undefined);\n    },\n    [appConnections, setAppConnections, setModelOutput]\n  );\n\n  const updateNodes = useCallback(\n    (nodesToUpdate: AppNode[], clearActiveNodes = false) => {\n      const newNodes = appNodes.map((node) => {\n        const nodeToUpdate = nodesToUpdate.find(\n          (newNode) => newNode.id === node.id\n        );\n        if (nodeToUpdate) {\n          return nodeToUpdate;\n        } else {\n          if (clearActiveNodes) {\n            return { ...node, isActive: false };\n          } else {\n            return node;\n          }\n        }\n      });\n      setAppNodes(newNodes);\n\n      const newConnections = appConnections.map((prevConn) => {\n        const newfirstNodeNode = nodesToUpdate.find(\n          (nodeToUpdate) => prevConn.firstNode.id == nodeToUpdate.id\n        );\n        if (newfirstNodeNode) {\n          return {\n            ...prevConn,\n            firstNode: newfirstNodeNode,\n            firstNodeId: newfirstNodeNode.id,\n          };\n        }\n\n        const newsecondNodeNode = nodesToUpdate.find(\n          (nodeToUpdate) => prevConn.secondNode.id == nodeToUpdate.id\n        );\n        if (newsecondNodeNode) {\n          return {\n            ...prevConn,\n            secondNode: newsecondNodeNode,\n            secondNodeId: newsecondNodeNode.id,\n          };\n        }\n        return prevConn;\n      });\n      setAppConnections(newConnections);\n    },\n    [appConnections, appNodes, setAppConnections, setAppNodes]\n  );\n\n  const deleteNodes = useCallback(\n    (nodeIds: string[]) => {\n      const newConnections = appConnections.filter(\n        (conn) =>\n          !nodeIds.includes(conn.firstNode.id) &&\n          !nodeIds.includes(conn.secondNode.id)\n      );\n      setAppConnections(newConnections);\n      setModelOutput(undefined);\n\n      const newNodes = appNodes.filter((node) => !nodeIds.includes(node.id));\n      setAppNodes(newNodes);\n    },\n    [appConnections, appNodes, setAppConnections, setAppNodes, setModelOutput]\n  );\n\n  const updateConnections = useCallback(\n    (connsToUpdate: AppConnection[]) => {\n      const sortedConnsToUpdate = connsToUpdate.map((conn) => {\n        const firstNodeFirst = conn.firstNode.name < conn.secondNode.name;\n        return {\n          ...conn,\n          firstNode: firstNodeFirst ? conn.firstNode : conn.secondNode,\n          firstNodeId: firstNodeFirst ? conn.firstNode.id : conn.secondNode.id,\n          secondNode: firstNodeFirst ? conn.secondNode : conn.firstNode,\n          secondNodeId: firstNodeFirst ? conn.secondNode.id : conn.firstNode.id,\n        };\n      });\n      const connIdsToUpdate = sortedConnsToUpdate.map((conn) => conn.id);\n      const oldConns = appConnections.filter(\n        (conn) => !connIdsToUpdate.includes(conn.id)\n      );\n      setAppConnections([...sortedConnsToUpdate, ...oldConns]);\n      setModelOutput(undefined);\n    },\n    [appConnections, setAppConnections, setModelOutput]\n  );\n\n  const deleteConnections = useCallback(\n    (connIds: string[]) => {\n      setAppConnections(\n        appConnections.filter((conn) => !connIds.includes(conn.id))\n      );\n      setModelOutput(undefined);\n    },\n    [appConnections, setAppConnections, setModelOutput]\n  );\n\n  const setActiveNodes = useCallback(\n    (activeNodeIds: string[]) => {\n      setAppNodes(\n        appNodes.map((node) => ({\n          ...node,\n          isActive: activeNodeIds.includes(node.id),\n        }))\n      );\n    },\n    [appNodes, setAppNodes]\n  );\n\n  const clearActiveNodes = useCallback(() => {\n    const anyActiveNodes = appNodes.find((node) => node.isActive) !== undefined;\n    if (anyActiveNodes) {\n      setAppNodes(\n        appNodes.map((node) => ({\n          ...node,\n          isActive: false,\n        }))\n      );\n    }\n  }, [appNodes, setAppNodes]);\n\n  return [\n    addNode,\n    addConnection,\n    updateNodes,\n    deleteNodes,\n    updateConnections,\n    deleteConnections,\n    setActiveNodes,\n    clearActiveNodes,\n  ];\n}\n","import React, { useEffect } from \"react\";\nimport { AppNode } from \"../App\";\n\nexport default function useKeyDown(\n  keyboardActive: boolean,\n  appNodes: AppNode[],\n  setAppNodes: (newNodes: AppNode[]) => void,\n  deleteNodes: (nodeIds: string[]) => void\n): void {\n  useEffect(() => {\n    const onKeyDown = (event: React.KeyboardEvent | KeyboardEvent) => {\n      if (keyboardActive) {\n        // meta + A makes all nodes active\n        if (event.metaKey && event.keyCode === 65) {\n          event.preventDefault();\n          setAppNodes(\n            appNodes.map((node) => {\n              return { ...node, isActive: true };\n            })\n          );\n        }\n\n        // delete active nodes on back/del\n        if (event.key === \"Backspace\" || event.key === \"Delete\") {\n          event.preventDefault();\n          deleteNodes(\n            appNodes.filter((node) => node.isActive).map((node) => node.id)\n          );\n        }\n\n        // escape key makes all inactive\n        if (event.keyCode === 27) {\n          setAppNodes(appNodes.map((node) => ({ ...node, isActive: false })));\n        }\n      }\n    };\n    document.addEventListener(\"keydown\", onKeyDown);\n    return () => document.removeEventListener(\"keydown\", onKeyDown);\n  }, [appNodes, deleteNodes, keyboardActive, setAppNodes]);\n}\n","import React, { useCallback } from \"react\";\nimport { CanvasState } from \"../components/Canvas/Canvas\";\nimport {\n  determineRadius,\n  intersectsCircle,\n  mouseToNodeCoords,\n  rotatedDirection,\n} from \"../components/Canvas/canvasUtils\";\nimport { AppNode } from \"../App\";\nimport { getNewAppNode } from \"../utils/nodeConnectionUtils\";\nimport config from \"../config\";\n\nexport default function useDoubleClick(\n  appNodes: AppNode[],\n  addNode: (node: AppNode) => void,\n  updateNodes: (nodes: AppNode[]) => void\n): (event: React.MouseEvent | MouseEvent, canvasState: CanvasState) => void {\n  return useCallback(\n    (event: React.MouseEvent | MouseEvent, canvasState: CanvasState) => {\n      event.preventDefault();\n      if (config.multiSelectKeys.some((k) => event[k])) {\n        return;\n      }\n\n      const nodeCoordsOfMouse = mouseToNodeCoords(event, canvasState);\n\n      const doubleClickedNode = appNodes.find((node) => {\n        const nodeRadius = determineRadius(\n          node.capacitanceJPerDegK,\n          appNodes.map((node) => node.capacitanceJPerDegK)\n        );\n        return intersectsCircle(nodeCoordsOfMouse, node.center, nodeRadius);\n      });\n\n      if (doubleClickedNode) {\n        updateNodes([\n          {\n            ...doubleClickedNode,\n            textDirection: rotatedDirection(doubleClickedNode.textDirection),\n          },\n        ]);\n      } else {\n        const newAppNode = getNewAppNode(appNodes, nodeCoordsOfMouse);\n        addNode(newAppNode);\n      }\n    },\n    [addNode, appNodes, updateNodes]\n  );\n}\n","import { useLayoutEffect, useState } from \"react\";\n\nexport default function useWindowSize(): [[number, number], number] {\n  const [size, setSize] = useState<[number, number]>([0, 0]);\n  const [ratio, setRatio] = useState(1);\n\n  useLayoutEffect(() => {\n    function updateSize() {\n      setSize([window.innerWidth, window.innerHeight]);\n    }\n    function updateRatio() {\n      const { devicePixelRatio: ratio = 1 } = window;\n      setRatio(ratio);\n    }\n    window.addEventListener(\"resize\", updateSize);\n    window.addEventListener(\"resize\", updateRatio);\n    updateSize();\n    updateRatio();\n    return () => {\n      window.removeEventListener(\"resize\", updateSize);\n      window.removeEventListener(\"resize\", updateRatio);\n    };\n  }, []);\n  return [size, ratio];\n}\n","export function forceShowScrollbars(): void {\n  // Returns whether scrollbars show up on scrollable elements.\n  // This is false on Macs when the \"General > Show scroll bars\" setting is\n  // not set to \"Always\" (the default is \"When scrolling\"). The approach\n  // taken here is to create an element that will scroll and then compare\n  // its outer width (including scrollbars) to its inner width (excluding\n  // scrollbars).\n  function areScrollbarsVisible() {\n    const scrollableElem = document.createElement(\"div\"),\n      innerElem = document.createElement(\"div\");\n    scrollableElem.style.width = \"30px\";\n    scrollableElem.style.height = \"30px\";\n    scrollableElem.style.overflow = \"scroll\";\n    scrollableElem.style.borderWidth = \"0\";\n    innerElem.style.width = \"30px\";\n    innerElem.style.height = \"60px\";\n    scrollableElem.appendChild(innerElem);\n    document.body.appendChild(scrollableElem); // Elements only have width if they're in the layout\n    const diff = scrollableElem.offsetWidth - scrollableElem.clientWidth;\n    document.body.removeChild(scrollableElem);\n    return diff > 0;\n  }\n\n  window.addEventListener(\"load\", function () {\n    // Show scrollbars if they're hidden.\n    if (!areScrollbarsVisible()) {\n      document.body.classList.add(\"force-show-scrollbars\");\n    }\n  });\n}\n","import * as React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { forceShowScrollbars } from \"./utils/scrollBar\";\n\nforceShowScrollbars();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}